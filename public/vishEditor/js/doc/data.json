{
    "project": {},
    "files": {
        "libs/ckeditor/lang/fa.js": {
            "name": "libs/ckeditor/lang/fa.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "libs/ckeditor/lang/ku.js": {
            "name": "libs/ckeditor/lang/ku.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "libs/ckeditor/plugins/autogrow/plugin.js": {
            "name": "libs/ckeditor/plugins/autogrow/plugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "libs/jquery.form.js": {
            "name": "libs/jquery.form.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "scorm/SCOBot.js": {
            "name": "scorm/SCOBot.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "scorm/SCORM_API.js": {
            "name": "scorm/SCORM_API.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.AppletPlayer.js": {
            "name": "VISH.AppletPlayer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.API.js": {
            "name": "VISH.Editor.API.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Dummies.js": {
            "name": "VISH.Editor.Dummies.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Events.js": {
            "name": "VISH.Editor.Events.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Image.js": {
            "name": "VISH.Editor.Image.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.LRE.js": {
            "name": "VISH.Editor.LRE.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Object.Snapshot.js": {
            "name": "VISH.Editor.Object.Snapshot.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Object.js": {
            "name": "VISH.Editor.Object.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Presentation.js": {
            "name": "VISH.Editor.Presentation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Renderer.js": {
            "name": "VISH.Editor.Renderer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Settings.js": {
            "name": "VISH.Editor.Settings.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Slides.js": {
            "name": "VISH.Editor.Slides.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Text.js": {
            "name": "VISH.Editor.Text.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Thumbnails.js": {
            "name": "VISH.Editor.Thumbnails.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Tools.Menu.js": {
            "name": "VISH.Editor.Tools.Menu.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Utils.iso8601Parser.js": {
            "name": "VISH.Editor.Utils.iso8601Parser.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Utils.js": {
            "name": "VISH.Editor.Utils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Video.HTML5.js": {
            "name": "VISH.Editor.Video.HTML5.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.js": {
            "name": "VISH.Editor.js",
            "modules": {},
            "classes": {
                "VISH.Editor": 1
            },
            "fors": {},
            "namespaces": {
                "VISH": 1
            }
        },
        "VISH.Events.js": {
            "name": "VISH.Events.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.I18n.js": {
            "name": "VISH.I18n.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.ImagePlayer.js": {
            "name": "VISH.ImagePlayer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Object.js": {
            "name": "VISH.Object.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.ObjectPlayer.js": {
            "name": "VISH.ObjectPlayer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Presentation.js": {
            "name": "VISH.Presentation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Quiz.API.js": {
            "name": "VISH.Quiz.API.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Quiz.js": {
            "name": "VISH.Quiz.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.QuizCharts.js": {
            "name": "VISH.QuizCharts.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Recommendations.js": {
            "name": "VISH.Recommendations.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.SCORM.API.js": {
            "name": "VISH.SCORM.API.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Slides.js": {
            "name": "VISH.Slides.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.SnapshotPlayer.js": {
            "name": "VISH.SnapshotPlayer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Tour.js": {
            "name": "VISH.Tour.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Utils.Loader.js": {
            "name": "VISH.Utils.Loader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Utils.js": {
            "name": "VISH.Utils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Video.HTML5.js": {
            "name": "VISH.Video.HTML5.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Video.Youtube.js": {
            "name": "VISH.Video.Youtube.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Viewer.js": {
            "name": "VISH.Viewer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.ViewerAdapter.js": {
            "name": "VISH.ViewerAdapter.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.js": {
            "name": "VISH.js",
            "modules": {
                "ViSH": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "ViSH": {
            "name": "ViSH",
            "submodules": {},
            "classes": {
                "VISH.Editor": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "VISH.Editor.js",
            "line": 1,
            "description": "ViSH Editor & Viewer\nViSH Editor is a HTML5 application to create web presentations in a simple and friendly way.\nhttp://github.com/ging/vish_editor"
        }
    },
    "classes": {
        "VISH.Editor": {
            "name": "VISH.Editor",
            "shortname": "VISH.Editor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ViSH",
            "namespace": "VISH",
            "file": "VISH.Editor.js",
            "line": 1,
            "description": "ViSH Editor"
        }
    },
    "classitems": [
        {
            "file": "libs/ckeditor/lang/fa.js",
            "line": 11,
            "fileoverview": "Defines the {@link CKEDITOR.lang} object for the\nPersian language.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/fa.js",
            "line": 16,
            "type": "String",
            "example": [
                ""
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/fa.js",
            "line": 21,
            "description": "Contains the dictionary of language entries.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/fa.js",
            "line": 27,
            "description": "The language reading direction. Possible values are \"rtl\" for\nRight-To-Left languages (like Arabic) and \"ltr\" for Left-To-Right\nlanguages (like English).",
            "default": "'ltr'",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/ku.js",
            "line": 11,
            "fileoverview": "",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/ku.js",
            "line": 15,
            "type": "String",
            "example": [
                ""
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/ku.js",
            "line": 20,
            "description": "Contains the dictionary of language entries.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/ku.js",
            "line": 26,
            "description": "The language reading direction. Possible values are \"rtl\" for\nRight-To-Left languages (like Arabic) and \"ltr\" for Left-To-Right\nlanguages (like English).",
            "default": "'ltr'",
            "class": "VISH.Editor"
        },
        {
            "file": "AutoGrow plugin",
            "line": 6,
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/plugins/autogrow/plugin.js",
            "line": 83,
            "description": "The minimum height to which the editor can reach using AutoGrow.",
            "name": "CKEDITOR.config.autoGrow_minHeight",
            "type": "Number",
            "default": "200",
            "since": "3.4",
            "example": [
                "\nconfig.autoGrow_minHeight = 300;"
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/plugins/autogrow/plugin.js",
            "line": 93,
            "description": "The maximum height to which the editor can reach using AutoGrow. Zero means unlimited.",
            "name": "CKEDITOR.config.autoGrow_maxHeight",
            "type": "Number",
            "default": "0",
            "since": "3.4",
            "example": [
                "\nconfig.autoGrow_maxHeight = 400;"
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/plugins/autogrow/plugin.js",
            "line": 103,
            "description": "Fired when the AutoGrow plugin is about to change the size of the editor.",
            "name": "",
            "itemtype": "event",
            "params": [
                {
                    "name": "data.currentHeight",
                    "description": "The current height of the editor (before the resizing).",
                    "type": "Number"
                },
                {
                    "name": "data.newHeight",
                    "description": "The new height of the editor (after the resizing). It can be changed\n                             to determine another height to be used instead.",
                    "type": "Number"
                }
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 53,
            "description": "Feature detection",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 60,
            "description": "ajaxSubmit() provides a mechanism for immediately submitting\nan HTML form using AJAX.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 664,
            "description": "ajaxForm() provides a mechanism for fully automating form submission.\n\nThe advantages of using this method instead of ajaxSubmit() are:\n\n1: This method will include coordinates for <input type=\"image\" /> elements (if the element\n   is used to submit the form).\n2. This method will include the submit element's name/value data (for the element that was\n   used to submit the form).\n3. This method binds the submit() method to the form for you.\n\nThe options argument for ajaxForm works exactly as it does for ajaxSubmit.  ajaxForm merely\npasses the options argument along after properly binding events for submit elements and\nthe form itself.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 759,
            "description": "formToArray() gathers form element data into an array of objects that can\nbe passed to any of the following ajax functions: $.get, $.post, or load.\nEach object in the array has both a 'name' and 'value' property.  An example of\nan array for a simple login form might be:\n\n[ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]\n\nIt is this array that is passed to pre-submit callback functions provided to the\najaxSubmit() and ajaxForm() methods.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 840,
            "description": "Serializes form data into a 'submittable' string. This method will return a string\nin the format: name1=value1&amp;name2=value2",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 849,
            "description": "Serializes all field elements in the jQuery object into a query string.\nThis method will return a string in the format: name1=value1&amp;name2=value2",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 874,
            "description": "Returns the value(s) of the element in the matched set.  For example, consider the following form:\n\n <form><fieldset>\n     <input name=\"A\" type=\"text\" />\n     <input name=\"A\" type=\"text\" />\n     <input name=\"B\" type=\"checkbox\" value=\"B1\" />\n     <input name=\"B\" type=\"checkbox\" value=\"B2\"/>\n     <input name=\"C\" type=\"radio\" value=\"C1\" />\n     <input name=\"C\" type=\"radio\" value=\"C2\" />\n </fieldset></form>\n\n var v = $(':text').fieldValue();\n // if no values are entered into the text inputs\n v == ['','']\n // if values entered into the text inputs are 'foo' and 'bar'\n v == ['foo','bar']\n\n var v = $(':checkbox').fieldValue();\n // if neither checkbox is checked\n v === undefined\n // if both checkboxes are checked\n v == ['B1', 'B2']\n\n var v = $(':radio').fieldValue();\n // if neither radio is checked\n v === undefined\n // if first radio is checked\n v == ['C1']\n\nThe successful argument controls whether or not the field element must be 'successful'\n(per http://www.w3.org/TR/html4/interact/forms.html#successful-controls).\nThe default value of the successful argument is true.  If this value is false the value(s)\nfor each element is returned.\n\nNote: This method *always* returns an array.  If no valid value can be determined the\n   array will be empty, otherwise it will contain one or more values.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 927,
            "description": "Returns the value of the field element.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 969,
            "description": "Clears the form data.  Takes the following actions on the form's input fields:\n - input text fields will have their 'value' property set to the empty string\n - select elements will have their 'selectedIndex' property set to -1\n - checkbox and radio inputs will have their 'checked' property set to false\n - inputs of type submit, button, reset, and hidden will *not* be effected\n - button elements will *not* be effected",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 983,
            "description": "Clears the selected form elements.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 1011,
            "description": "Resets the form data.  Causes all form elements to be reset to their original value.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 1024,
            "description": "Enables or disables any matching elements.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 1036,
            "description": "Checks/unchecks any matching checkboxes or radio buttons and\nselects/deselects and matching option elements.",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 3,
            "description": "This is a sample SCORM Startup sequence and handicap API's for ease of use.\nGeneral Concept: When the LMS connects, call var SB = new SCOBot();\nSCOBot\nThis only works with the SCORM_API, but has the basis to work with other API's.\nSeveral public API's will call one to many SCORM Calls and this will make every attempt to\ndo common SCORM Tasks or boil down SCORM tasks into a smaller easy to use method.\nMode: {get} Browse, Review, Normal\nBookmark: {get/set} SCO Progress\nSuspend Data: {get/set} Suspend Data Object\nInteractions: {set} Interaction(s)\nObjectives: {set} Objective(s)\n\nJSLint recently complained about  tabs.  Switched to spaces.\n\nhttps://github.com/cybercussion/SCOBot",
            "author": "Mark Statkus <mark@cybercussion.com>",
            "license": "Copyright (c) 2009-2014, Cybercussion Interactive LLC\nAs of 3.0.0 this code is under a Creative Commons Attribution-ShareAlike 4.0 International License.",
            "requires": [
                "scorm",
                "JQuery"
            ],
            "version": "3.1.0",
            "params": [
                {
                    "name": "options",
                    "description": "override default values",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 35,
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 71,
            "description": "Initialize SCO\nThis is commonly done on load of the web page.\nDefault behavior",
            "itemtype": "event",
            "name": "load",
            "return": {
                "description": "true or false if established LMS connection",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 91,
            "description": "Exit SCO\nCommonly done when unload or beforeunload is triggered\nDefault behavior",
            "itemtype": "event",
            "name": "unload",
            "return": {
                "description": "true or false if successfully exited",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 125,
            "description": "Trigger Warning (internal to this API)\nThrows a console log when a SCORM API Error occurs",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 135,
            "description": "Trigger Exception\nThrows an event the player can listen to in order to handle an exception.\nThis would be common to a non-compliance in an LMS and loss of student data.",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 147,
            "description": "Is Performing\nThis is based on cmi.success_status",
            "return": {
                "description": "based on if this value has been set (true) or (false) if not",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 157,
            "description": "Verify cmi score scaled\nValidates if success_status is passed, and exit_type is normal.  Checks that score.max is 1.\nMay need to tighten this up later, its mostly for SCO's that default to normal and expect them to be complete.",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 173,
            "description": "Is Bad Value\nWe get a variety of responses from an LMS",
            "return": {
                "description": "true if its bad.",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 182,
            "description": "Cleanse Data\nThis will escape out characters that may of been cross-contaminated from other proprietary sources.\nThese can often result in UTF-8 and other encoding issues and may result in errors.",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 192,
            "description": "Is ISO 8601\nI've got a RegEx to validate ISO 8601 time based on SCORM 2004 Formats.\nThis is a great common way to do this so regardless of time zone you can reflect the\ntime this time stamp was referring to.\nAcceptable Format GMT 2012-02-28T15:00:00.0-8:00, UTC 2012-02-28T15:00:00.0-8:00Z, Plain 2012-02-28T15:00:00",
            "params": [
                {
                    "name": "v",
                    "description": "ISO 8601 timestamp",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true or false",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 217,
            "description": "is ISO 8601 Duration\nThis is a PT0H0M0S format",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 228,
            "description": "Not Started Yet\nYou should never see this message, but I found I may need to trace this more than once.",
            "return": {
                "description": "'false'",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 238,
            "description": "Current Time",
            "return": {
                "description": "Milliseconds",
                "type": "Number"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 246,
            "description": "True Round\nMay consider using this to fit within real(10,7) scoring in the event the decimal goes over 7 digits",
            "params": [
                {
                    "name": "v",
                    "description": "value",
                    "type": "Number"
                },
                {
                    "name": "dec",
                    "description": "decimal places",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 258,
            "description": "Find Response Type (May not use this)\nThis is designed to check for {case_matters: true/false}, {order_matters: true/false} or {lang: x}",
            "params": [
                {
                    "name": "type",
                    "description": "order_matters, case_matters, lang",
                    "type": "String"
                },
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 284,
            "description": "Times Up",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 309,
            "description": "Set Value By Interaction Type\nThis is a data filter to convert input formats into SCORM standard strings.  Please review each interaction for what it expects.\nThis will not enforce SCORM char limits, so please mind your logs if your doing something your not suppose to.",
            "params": [
                {
                    "name": "type",
                    "description": "Expects true-false, choice, fill-in, long-fill-in, matching, performance, sequencing, likert, numeric, other",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "May take Array or Object of arrays depending",
                    "type": "*"
                }
            ],
            "return": {
                "description": "formatted value for interaction type or Boolean false",
                "type": "*"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 542,
            "description": "Numeric\ncomments coming",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 581,
            "description": "Decode Value By Interaction Type\nThis is a data filter to convert input formats from SCORM standard strings to there native JS equivalent.",
            "params": [
                {
                    "name": "type",
                    "description": "Expects true-false, choice, fill-in, long-fill-in, matching, performance, sequencing, likert, numeric, other",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "SCORM 2004 Format for Interaction learner response, or pattern",
                    "type": "String"
                }
            ],
            "return": {
                "description": "formatted value for interaction type",
                "type": "*"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 742,
            "description": "Numeric\nThis falls into a simple hand off",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 767,
            "description": "Set Suspend Data\nThis will set existing suspend data managed by escaping the values",
            "return": {
                "description": "true (success) false (fail)",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 784,
            "description": "Check Progress\nThis should be used sparingly.  Its going to total up the scoring real-time based on any interactions and objectives.\ncmi.score.scaled,\ncmi.success_status,\ncmi.completion_status,\ncmi.progress_measure",
            "return": {
                "description": "object or false string\n{\n score_scaled      = '0',\n success_status    = 'failed',\n progress_measure  = '0',\n completion_status = 'incomplete'\n}",
                "type": "*"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 872,
            "description": "Get Comments From LMS\nChecks to see if there are any comments from the LMS, and will\nreturn a complete object back for use with a display.",
            "return": {
                "description": "object or 'false'",
                "type": "*"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 905,
            "description": "Update Status\nRolled up success/completion status functionality",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 931,
            "description": "Start (Internal API)\nInitializes the SCORM Startup, and communicates with SCORM (cruise control)\nand will begin to store some common used parameters for use later. Like:\n1. mode\n2. location (bookmark)\n3. scaled_passing_score\n4. suspend_data\n5. completion_status\n6. success_status\nThese can be obtained by asking SB.get('location'); i.e. the name space for these after you start,\nand during the session.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1055,
            "description": "Set Totals\nThis will take in total objectives, interactions, score max and score min to aid\nin the calculation of a score rollup.",
            "params": [
                {
                    "name": "data",
                    "description": "\n{\n totalInteractions: '0',\n totalObjectives: '0',\n scoreMin: '0',\n scoreMax: '0'\n}",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "'true' or 'false'",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1088,
            "description": "Start Timer\nThis will begin the timer based on the time provided by max_time_allowed.  This depends on the time_limit_action.",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1096,
            "description": "Debug\nRelay so you don't have to say scorm vs SB",
            "type": "{*} *see SCORM_API debug",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1102,
            "description": "Get Value\nRelay so you can keep talking to SCOBot for one-to-one SCORM calls.",
            "type": "{*|Function} *see SCORM_API getvalue",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1108,
            "description": "Set Value\nRelay so you can keep talking to SCObot for one-to-one SCORM calls.",
            "type": "{*|Function} *see SCORM_API setvalue",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1114,
            "description": "Get Mode\nThis will return the current SCO Mode we are in (normal, browse, review)",
            "return": {
                "description": "normal, browse, review",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1125,
            "description": "Get Entry\nThis will return the entry type (ab-initio, resume or \"\")",
            "return": {
                "description": "ab-initio, resume , \"\"",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1136,
            "description": "Set Bookmark\nThis will update the local snap shot, and update SCORM (commit still required)",
            "params": [
                {
                    "name": "v",
                    "description": "value\nreturns {String} 'true' or 'false'.",
                    "type": "String"
                }
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1149,
            "description": "Get Bookmark\nThis will return the local snapshot, but is in sync with cmi.location",
            "return": {
                "description": "bookmark",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1160,
            "description": "Progress\nHooks to Private method used possibly elsewhere in this API\ncmi.score.scaled,\ncmi.success_status,\ncmi.completion_status,\ncmi.progress_measure",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1170,
            "description": "Set Suspend Data By Page ID\nThis will set the suspend data by id (could be a page ID as long as its unique)\nSuspend data is a 64,000 character string.  In this case it will be a JSON Object that\nfreely converts to a JSON String or Object.\nNow you could require that the end user have a id in their data object, or in this case keep it\nseparate for search ability.  Either way you'll have to verify they are passing a id.\nI've opted to make them pass the ID.  I'm also opting to keep this as a object instead of\njust a page array.  You may want to add more things to suspend data than just pages.\nExample structure of this:\n{\n sco_id: '12345',\n name: 'value',\n pages: [\n     {\n         id: 1,\n         title: 'Presentation',\n         data: {data object for a page}\n     },\n     {\n         id: 2,\n         title: 'Match Game',\n         data: {data object for a page}\n    }\n ]\n};\nCalling commit will still be needed to truly save it.",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1228,
            "description": "Get Suspend Data By Page ID\nThis will get the suspend data by id",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "object, but false if empty.",
                "type": "*"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1250,
            "description": "Get Time From Start",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1257,
            "description": "Set Interaction\nThis will set an interaction based on Journaling or State.\nParameter for choosing a version is located in the defaults.\nNote: If you are recording Journaling make sure its something the LMS\nsupports or plans to support, or your just blimping out your interactions array\nfor no reason.\nYou may ask what is \"real(10,7)\".  This is a binary floating point with a precision up to 7 characters to the right of the decimal.\nExample Data Object:\n{\n id: '1',                             // 4000 chars\n type: 'true-false',                  // (true-false, choice, fill-in, long-fill-in, matching, performance, sequencing, likert, numeric, other)\n objectives: [\n   {\n      id: '12'\n   }\n ],\n timestamp: 'expects date object when interaction starts',  // second(10,0) Pass a date object\n correct_responses: [\n     {\n         pattern: ''                  // depends on interaction type\n     }\n ],\n weighting: '1',\n learner_response: 'true',\n result: 'correct',                   // (correct, incorrect, unanticipated, neutral, real (10,7) )\n latency: 'expects date object after interaction is done',  // second(10,2)\n description: \"The question commonly\" // 250 chars\n}",
            "params": [
                {
                    "name": "data",
                    "description": "Interaction Object from SCORM",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "'true' or 'false'",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1425,
            "description": "Get Interaction\nReturns the full Interaction object",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "object or string 'false'\n{\n id: '1',                             // 4000 chars\n type: 'true-false',                  // (true-false, choice, fill-in, long-fill-in, matching, performance, sequencing, likert, numeric, other)\n objectives: [\n     {\n         id: '12'\n     }\n ],\n timestamp: 'expects date object when interaction starts',  // second(10,0) Pass a date object\n correct_responses: [\n     {\n         pattern: ''                  // depends on interaction type\n     }\n ],\n weighting: '1',\n learner_response: 'true',\n result: 'correct',                   // (correct, incorrect, unanticipated, neutral, real (10,7) )\n latency: 'expects date object after interaction is done',  // second(10,2)\n description: \"The question commonly\" // 250 chars\n}\nor\n'false'",
                "type": "*"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1514,
            "description": "Set Objective\nSets the data for the scorm objective.  ID's have to be set first and must be unique.\nExample data object\n{\n id: '1',                            // 4000 chars\n score: {\n     scaled: '0',                    // real(10,7) *\n     raw: '0',\n     min: '0',\n     max: '0'\n }\n success_status: 'failed',            // (passed, failed, unknown)\n completion_status: 'incomplete',     // (completed, incomplete, not attempted, unknown)\n progress_measure: '0',               // real(10,7)\n description: 'This is the objective' // 250 Chars\n}",
            "params": [
                {
                    "name": "data",
                    "description": "Objective object from SCORM",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "'true' or 'false'",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1585,
            "description": "Get Objective\nReturns the Objective object by ID",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "object or string 'false'\n{\n id: '1',                            // 4000 chars\n score: {\n     scaled: '0',                    // real(10,7) *\n     raw: '0',\n     min: '0',\n     max: '0'\n }\n success_status: 'failed',            // (passed, failed, unknown)\n completion_status: 'incomplete',     // (completed, incomplete, not attempted, unknown)\n progress_measure: '0',               // real(10,7)\n description: 'This is the objective' // 250 Chars\n}\nor\n'false'",
                "type": "*"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1631,
            "description": "Set Comment From Learner\nThis will set the comment, location and time the student made a comment",
            "params": [
                {
                    "name": "msg",
                    "description": "comment",
                    "type": "String"
                },
                {
                    "name": "loc",
                    "description": "location",
                    "type": "String"
                },
                {
                    "name": "date",
                    "description": "New Date object (for timestamp)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1657,
            "description": "Grade It\nThis method will set cmi.score.scaled, cmi.success_status, and cmi.completion_status.  This is for situations\nwhere you are doing simple scoring, with NO objectives or interactions.\nPrereq for this would be to have passed in scaled_passing_score and completion_threshold in to SCOBot\nIf none are provided it will default to 'passed' and 'completed'\nSpecial Note: If you are using Objectives, Interactions and set the totals, you do not need to use this method.",
            "return": {
                "description": "'true' or 'false'",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1690,
            "description": "Happy Ending\nThis will auto-score the student to passed, completed, and scored",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1707,
            "description": "Commit\nThis will commit the data stored at the LMS Level to the backend.  Please use sparingly.",
            "return": {
                "description": "'true' or 'false'",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1718,
            "description": "Suspend\nThis will suspend the SCO and ends with terminating.  No data can be saved after this.",
            "return": {
                "description": "'true' or 'false'",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1733,
            "description": "Finish\nThis will set success status, exit and completion",
            "return": {
                "description": "'true' or 'false'",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1749,
            "description": "Timeout\nThis will set success status, exit and completion",
            "return": {
                "description": "'true' or 'false'",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1765,
            "description": "Is ISO 8601 UTC",
            "return": {
                "description": "true/false",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1770,
            "description": "Set\nThis locally sets values local to this API",
            "params": [
                {
                    "name": "n",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "v",
                    "description": "(String,Number,Object,Array,Boolean} value"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1792,
            "description": "Get\nThis locally gets values local to this API",
            "params": [
                {
                    "name": "n",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value or {Boolean} false",
                "type": "*"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCOBot.js",
            "line": 1806,
            "description": "Wrap up Constructor\nCertain versions of mozilla had an issue with not firing the window unload event.\nAt the time, I used window.top to get around this.  Later I started seeing with JQuery\ndifferent behavior once I incorporated it.  So at this point I'm using window not window.top.",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 3,
            "description": "SCORM API\nThis is a content API, it self-establishes communication with the LMS in SCORM 2004 or 1.2.\nSwitch statements will convert some SCORM 2004 calls to SCORM 1.2, but you must understand there are limitations\non data storage between versions. Example: Suspend Data 64,000 vs 4096 or Bookmark(location) 1000 vs 255.\nDepending on your use, your content may not squeeze into the SCORM 1.2 available space.  Because of this, log messages\nwill be output so you can monitor your cmi \"set\" value length.  Ultimately, a LMS may block your request because of this.\nThis API is meant to simplify common SCORM Tasks, but also offers the ability to use it 'long hand'. Several other\npublic API's are available online, some free some charge, and this is a best effort to boil it all down.\nDocumentation, samples, resources, and credits: ADL, Claude Ostyn, Pipwerks, SCORM.com\nGoals: SCORM For Everyone else, low overhead, simple API's, containment, and transparency.\n\nTypical CMI Usage (if used by itself):\nvar scorm = new SCORM_API({debug: true, exit_type: 'suspend'}),\n    lmsconnected = scorm.initialize();\nscorm.getvalue('cmi.location');\nscorm.setvalue('cmi.location', '4');\nscorm.commit();\nscorm.terminate();\n\nHTML Event Setup:\nIf you choose not to use SCOBot tips for onload and onunload, onbeforeunload events you may need to make init, exit methods to do other things\nvs. directly referencing the SCORM API here.  Feel free to make those methods if you need to.  'window.top' can be used because\nsome deployments self occur within a popup in a IFRAME will not fire properly on exit, in some Mozilla browsers.  Last checked, window worked with\nJQuery 1.7+ however.  If you have issues trapping the unload event, please try window.top.\n$(window).bind('load', YOUR_INITIALIZATION_METHOD);\n$(window).bind('unload', YOUR_EXIT_METHOD);\n\nJSLint was recently changed and its throwing a \"use spaces, not tabs\" error.  I decided to switch to spaces.\nhttps://github.com/douglascrockford/JSLint/pull/140\n\nhttps://github.com/cybercussion/SCOBot",
            "author": "Mark Statkus <mark@cybercussion.com>",
            "license": "Copyright (c) 2009-2014, Cybercussion Interactive LLC\nAs of 3.0.0 this code is under a Creative Commons Attribution-ShareAlike 4.0 International License.",
            "requires": [
                "JQuery"
            ],
            "version": "3.1.0",
            "params": [
                {
                    "name": "options",
                    "description": "override default values",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 97,
            "description": "No Console\nLack of support in older browsers forced this",
            "params": [
                {
                    "name": "msg",
                    "description": "Debug Message",
                    "type": "String"
                },
                {
                    "name": "lvl",
                    "description": "1=Error, 2=Warning, 3=Log, 4=Info",
                    "type": "*"
                }
            ],
            "itemtype": "event",
            "name": "debug fired when no console is available.  You could listen to this to put it in an alternative log.",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 113,
            "description": "Debug\nBuilt-In Debug Functionality to output to console (Firebug, Inspector, Dev Tool etc ...)",
            "params": [
                {
                    "name": "msg",
                    "description": "Debug Message",
                    "type": "String"
                },
                {
                    "name": "lvl",
                    "description": "1=Error, 2=Warning, 3=Log, 4=Info",
                    "type": "Integer"
                }
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 154,
            "description": "Find API\nAPI_1484_11 or API for SCORM 2004 or 1.2",
            "params": [
                {
                    "name": "win",
                    "description": "Window level",
                    "type": "Object"
                }
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 180,
            "description": "Centiseconds To ISO Duration\nBorrowed from Claude Ostyn, but touched up for JSLint/JavaScript and evil \"with\" statement",
            "params": [
                {
                    "name": "n",
                    "description": "Total Seconds",
                    "type": "Number"
                },
                {
                    "name": "bPrecise",
                    "description": "Only Set true if were dealing with months, years (highly unlikely)",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "SCORM 2004 Time PT0H0M0S Format",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 259,
            "description": "ISO Duration to Centisecond",
            "params": [
                {
                    "name": "str",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 329,
            "description": "Pad Time\nPads time with proper formatting (double digits)",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 337,
            "description": "ISO 8601 Date String UTC\nConverts date object into ISO 8601 standard\nreturns {String} ISO 8601 + UTC",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 346,
            "description": "ISO 8601 Date String\nConcerts date into ISO 8601 Standard",
            "return": {
                "description": "ISO 8601",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 357,
            "description": "ISO 8601 String to Date\nNot extremely clear yet if this is needed at a SCO level.  If not I'll remove it later.",
            "params": [
                {
                    "name": "str",
                    "description": "ISO8601",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Date Object or false",
                "type": "Object"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 403,
            "description": "Centiseconds To SCORM 1.2 Duration\nBorrowed from Claude Ostyn, but touched up for JSLint/JavaScript and evil \"with\" statement",
            "params": [
                {
                    "name": "n",
                    "description": "Total Seconds",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "SCORM 2004 Time PT0H0M0S Format",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 452,
            "description": "Make Boolean\nTurns 'yes', 'no', 'true', 'false', '0', '1' into true/false",
            "params": [
                {
                    "name": "str",
                    "description": "value to turn to boolean",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 481,
            "description": "Trigger Warning (internal to this API)\nThrows a console log when a SCORM API Error occurs",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 491,
            "description": "Trigger Exception",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 501,
            "description": "Get Last LMS Error Code\nError Code should be 0 if its anything else, a error has occurred",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 526,
            "description": "Get Last LMS Error Message\nError Message associated by error code",
            "params": [
                {
                    "name": "n",
                    "description": "error code",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "error message",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 575,
            "description": "Get Value (SCORM Call)\nGets the cmi object value requested",
            "params": [
                {
                    "name": "n",
                    "description": "CMI Object Path as String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "event",
            "name": "'getvalue'",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 705,
            "description": "Set Value (SCORM Call)\nSets the cmi object value by name",
            "params": [
                {
                    "name": "n",
                    "description": "CMI Object Path as String",
                    "type": "String"
                },
                {
                    "name": "v",
                    "description": "Value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "event",
            "name": "'setvalue'",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 868,
            "description": "Commit (SCORM Call)\nCommits the Data to the Server via the LMS API.  SCORM Time done by default.",
            "return": {
                "description": "'true' or 'false'",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 905,
            "description": "Initialize  (SCORM Call)\nInitializes the SCO",
            "return": {
                "description": "'true' or 'false'",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 961,
            "description": "Terminate (SCORM Call)\nTerminates the SCO",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 1002,
            "description": "Get Objective By ID\nThis is fun, they make you go fish the objectives array integer by the ID.\nObjectives do not appear to be 'journaled' as object identifiers have to be unique.\nAs this method is seeking information it may trigger SCORM Errors on the LMS that hint that\nobjects haven't been defined yet.  This is perfectly normal.",
            "params": [
                {
                    "name": "id",
                    "description": "Alpha-Numeric Identification of the Interaction you're looking for",
                    "type": "*"
                }
            ],
            "return": {
                "description": "'false' if nothing found or id",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 1033,
            "description": "Get Interaction By ID\nThis is fun, they make you go fish the interactions array integer by the ID.\nI included this in the main SCORM API because this functionality should be stock.  You're\neither going to journal these (history) or treat them like states that you update.  You must decide that.",
            "params": [
                {
                    "name": "id",
                    "description": "Alpha-Numeric Identification of the Interaction you're looking for",
                    "type": "*"
                }
            ],
            "return": {
                "description": "'false' if nothing found or id",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 1063,
            "description": "Get interaction.n.objective By ID\nYou can have multiple objectives assigned to a interaction.",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 1089,
            "description": "Get interaction.n.correct_responses By pattern\nYou can have multiple correct responses assigned to a interaction.",
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 1118,
            "description": "Init (Internal API)\nInitializes the SCORM API, and locates the LMS API",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 1164,
            "description": "Get Last Error (Internal API)\nConverts error integer to Message String",
            "params": [
                {
                    "name": "n",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value",
                "type": "String"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 1173,
            "description": "Is LMS Connected\nWill tell you if LMS is truly connected or not.  You may be running locally.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 1181,
            "description": "Set (Internal API)\nThis locally sets values local to this API",
            "params": [
                {
                    "name": "n",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "v",
                    "description": "(String,Number,Object,Array,Boolean} value"
                }
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 1212,
            "description": "Get (Internal API)\nThis locally gets values local to this API",
            "params": [
                {
                    "name": "n",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value or {Boolean} false",
                "type": "*"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "scorm/SCORM_API.js",
            "line": 1226,
            "description": "Hook for External Plugins like Flash to set Time\nPublic to Private API's",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.AppletPlayer.js",
            "line": 3,
            "description": "Function to add an applet element to the slide\nthe applet is inside the archive, width, height and params attributes of the div",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.AppletPlayer.js",
            "line": 15,
            "description": "Function to remove the applets of the presentation",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 1,
            "description": "Provide an API with ViSH (Virtual Science Hub)",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 9,
            "description": "Request IMAGES in json format\nThe request is: GET /search.json?type=picture&q=text",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 44,
            "description": "function to call VISH and request recommended images",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 63,
            "description": "Request VIDEOS in json format\nThe request is: GET /search.json?type=video&q=text",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 99,
            "description": "function to call VISH and request recommended videos",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 117,
            "description": "Request OBJECTS in json format\nThe request is: GET /search.json?object=1&q=text",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 152,
            "description": "function to call VISH and request recommended objects",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 170,
            "description": "function to call VISH and request live objects in json format\nThe request is:\nGET /search.json?live=1&q=",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 207,
            "description": "function to call VISH and request recommended lives objects",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 225,
            "description": "function to call VISH and request excursions in json format\nThe request is:\nGET /excursions/search.json?type=&q=text",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 262,
            "description": "function to call VISH and request recommended excursions",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 280,
            "description": "generic function to call VISH and request by query and type\nThe request is:\nGET /search.json?type=type&q=query",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 314,
            "description": "Specific function to call VISH and request lives\nThe request is:\nGET /resources/search.json?live=1&q=",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 339,
            "description": "Specific function to call VISH and request excursions\nThe request is:\nGET /excursions/search.json?type=&q=query",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 367,
            "description": "Function to call VISH and request tags",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 405,
            "description": "Function to get the available avatars from the server, they should be at /excursion_thumbnails.json",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Dummies.js",
            "line": 97,
            "description": "Function to replace dummy ids",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Events.js",
            "line": 228,
            "description": "Tutorial\nFunction to add the events to the help buttons to launch joy ride bubbles",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Image.js",
            "line": 187,
            "description": "Function to draw an image in a zone of the template\nthe zone to draw is the one in current_area\nthis function also makes the image draggable\nparam area: optional param indicating the area to add the image, used for editing presentations\nparam style: optional param with the style, used in editing presentation",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 26,
            "description": "function to call to LRE and request images\nsuccessCallback: function to pass the results if everything goes well.\nfailCallback: function to pass the error if something fails. Format: {\"error\":\"cnf cannot be null!\"}",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 47,
            "description": "function to call to LRE and request objects (webs, etc.)\nsuccessCallback: function to pass the results if everything goes well.\nfailCallback: function to pass the error if something fails. Format: {\"error\":\"cnf cannot be null!\"}",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 57,
            "description": "Generic function to call LRE and request for content with some params\nVISH acts as a proxy, so this method sends it the query and the number of objects to receive\nVISH will call the LRE server and will take the returned ids and will ask for them\n     returning the array with the metadata for the results, so this client do not need to do two requests\nlimit: number of items to return\nresponse_type: the type of array that we want as response (it can be \"image\" or \"object\")\nsuccessCallback: function to pass the results if everything goes well\nfailCallback: function to pass the error if something fails. Format: {\"error\":\"cnf cannot be null!\"}\nThe request is:\nGET /lre/search?q=query&limit=10",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 88,
            "description": "generic function to compose a valid query to send to the LRE\nexplanations of params:\n\nterms: array of terms to be searched. Example [\"biology\", \"nature\"] -> search in LRE content containing \"biology\" AND \"nature\"\nlrt: array of learning resource types. See the LRE Metadata Application Profile at page 35 of http://lreforschools.eun.org/c/document_library/get_file?\n\t\tp_l_id=10970&folderId=12073&name=DLFE-1.pdf (i.e: audio, data, image, text, video)\n     if not specified we request for all lrt\nlanguage: language of the learning object searched as ISO639-1 code -> example: en, es, pt\nNOT USED MAXAGE AND MINAGE BECAUSE LRE RETURNED NO RESULTS:",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 120,
            "description": "function to change the metadata returned by the \nLRE to a simple format similar to the one that we use in VISH repository\nThis method is public so I can call it from command line to test it with \nV.Editor.LRE.formatLREResponse(VISH.Samples.API.LREImageList)\nIMPORTANT: THIS METHOD REMOVES FROM THE ARRAY THE \"PROVIDERS_TO_REMOVE\" PROVIDERS",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 152,
            "description": "Function to format one element from LRE to our format\nif type is \"image\" returns null if not a raw image (sometimes it is a website or other thing)\nThe final format is for \"image\": \n\t  \t{\n\t  \t\t\"id\":54,\n\t\t\t\"title\":\"ClintEastwood.jpg\",\n\t\t\t\"description\":null,\n\t\t\t\"author\":\"Demo\",\n\t\t\t\"src\":\"http://www.dan-dare.org/dan%20simpsons/TheSimpsonsEveryoneEver800.jpg\"\n\t\t}\n\t\tand for \"object\":\n\t\t{\n\t      'id'     : '1534',\n\t      'title'         :  'Game Strauss',\n\t      'description'   :  'Fichero PDF',\n\t      'author'        :  'Conspirazzi',\n\t      'object'        :  'http://www.conspirazzi.com/e-books/game-strauss.pdf',\n\t      'thumbnail'\t  : 'http://lrethumbnails.eun.org/995/445995.png'\n\t    }",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 214,
            "description": "function to get the SRC from the my_element",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 241,
            "description": "function to check if a returned image element has any manifestation as webBrowser",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 263,
            "description": "function to get title and description in your lang or in english if not your lang present",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Object.Snapshot.js",
            "line": 73,
            "description": "Param style: optional param with the style, used in editing presentation",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Object.js",
            "line": 399,
            "description": "Returns a object prepared to draw.\nparam options.area: optional param indicating the area to add the object, used for editing presentations\nparam options.style: optional param with the style, used in editing presentation",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Object.js",
            "line": 500,
            "description": "param style: optional param with the style, used in editing presentation",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Presentation.js",
            "line": 31,
            "description": "Insert the selected slides of a slide presentation in JSON",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Renderer.js",
            "line": 5,
            "description": "Function to initialize the renderer",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Renderer.js",
            "line": 40,
            "description": "function to render one slide in editor",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Renderer.js",
            "line": 119,
            "description": "Function to render slidesets",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Settings.js",
            "line": 406,
            "description": "function called when the user clicks on the save button\nin the initial presentation details fancybox to save\nthe data in order to be stored at the end in the JSON file",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Settings.js",
            "line": 604,
            "description": "function called when the user clicks on the pedagogical options button",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Settings.js",
            "line": 613,
            "description": "function called when the user clicks on the done button in the pedagogical options panel",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Slides.js",
            "line": 19,
            "description": "function to know if the slides have the focus or not\nUse to disable actions (like keyboard shortcuts) when the slide is not focused",
            "return": {
                "description": "false if other element has the focus"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Slides.js",
            "line": 51,
            "description": "Function to go to next subslide in a slideset",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Slides.js",
            "line": 58,
            "description": "Function to go to previous subslide in a slideset",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Slides.js",
            "line": 65,
            "description": "Function to move n subslides and change the thumbnails and focus\nn > 0 (advance subslides)\nn < 0 (go back)",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Slides.js",
            "line": 89,
            "description": "Go to the subslide no",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Text.js",
            "line": 79,
            "description": "Function called when user clicks on the text thumb\nAllows users to include text content in the slide using a WYSIWYG editor\nparam area: optional param indicating the area to add the wysiwyg, used for editing presentations",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Thumbnails.js",
            "line": 145,
            "description": "Function to select the thumbnail",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Tools.Menu.js",
            "line": 101,
            "description": "function called when user clicks on save\nGenerates the json for the current slides\ncovers the section element and every article inside\nfinally calls V.Viewer with the generated json",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Utils.iso8601Parser.js",
            "line": 51,
            "description": "Parses a ISO8601 period string.",
            "params": [
                {
                    "name": "period",
                    "description": "iso8601 period string"
                },
                {
                    "name": "_distributeOverflow",
                    "description": "if 'true', the unit overflows are merge into the next higher units."
                }
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Utils.js",
            "line": 60,
            "description": "function to get the styles in percentages",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Utils.js",
            "line": 336,
            "description": "Function to load a tab and its content in the fancybox\nalso changes the help button to show the correct help",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Video.HTML5.js",
            "line": 29,
            "description": "Returns a video object prepared to draw.\nSources: array of arrays [[source src, source type],...] .\nOptions: hash with additional data like poster url or autoplay\nparam area: optional param indicating the area to add the video, used for editing presentations\nparam style: optional param with the style, used in editing presentation",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.js",
            "line": 31,
            "description": "VISH Editor initializer.\nAdds the listeners to the click events in the different images and buttons of the UI.\nCall submodule initializers.",
            "params": [
                {
                    "name": "options",
                    "description": "Hash with params and options received from the server.",
                    "type": "HashTable"
                },
                {
                    "name": "presentation",
                    "description": "Presentation to edit (if not present, a new presentation is created).",
                    "type": "JSONObject"
                }
            ],
            "itemtype": "method",
            "name": "init",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 211,
            "description": "function called when user clicks on template\nIncludes a new slide following the template selected",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 266,
            "description": "Function called when user clicks on an editable element\nEvent launched when an editable element belonging to the slide is clicked",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 312,
            "description": "function called when user clicks on the delete icon of the zone",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 344,
            "description": "Function called when user delete a slide",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 383,
            "description": "function called when user clicks on template zone with class selectable",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 392,
            "description": "Function called when user clicks on any element without class selectable",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 456,
            "description": "Function to add a delete button to the element",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 468,
            "description": "Function called when entering slide in editor, we have to show the objects",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 494,
            "description": "Function called when leaving slide in editor, we have to hide the objects",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 519,
            "description": "Function to save the presentation",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 879,
            "description": "function to get the template of the slide of current_el\nparam area: optional param indicating the area to get the template, used for editing presentations",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Events.js",
            "line": 139,
            "description": "function to add the events to the help buttons to launch joy ride bubbles",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.I18n.js",
            "line": 7,
            "description": "Function to do the language translation",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.I18n.js",
            "line": 141,
            "description": "Function to translate a text",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.I18n.js",
            "line": 185,
            "description": "Return the current language",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.ImagePlayer.js",
            "line": 3,
            "description": "Function to reload a gifs in the slide for Mobile devices",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Object.js",
            "line": 104,
            "description": "Patterns",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.ObjectPlayer.js",
            "line": 3,
            "description": "Function to add an object to the slide\nthe object is in the wrapper attribute of the div",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Presentation.js",
            "line": 4,
            "description": "Function to initialize the presentation\nInitialize renderer and call it to render each slide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Quiz.API.js",
            "line": 148,
            "description": "GET /quiz_sessions/X/results.json.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Quiz.API.js",
            "line": 219,
            "description": "Send answers for real time quizzes\nPUT /quiz_sessions/X",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Quiz.js",
            "line": 88,
            "description": "Function to render a quiz inside an article (a slide)",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.QuizCharts.js",
            "line": 460,
            "description": "Helpers",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Recommendations.js",
            "line": 24,
            "description": "Function to initialize the Recommendations",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Recommendations.js",
            "line": 98,
            "description": "Function to check if this is the appropiate moment to request the recommendations",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Recommendations.js",
            "line": 116,
            "description": "Function to call ViSH via AJAX to get recommendation of excursions",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 103,
            "description": "SCORM API\nThis is a content API, it self-establishes communication with the LMS in SCORM 2004 or 1.2.\nSwitch statements will convert some SCORM 2004 calls to SCORM 1.2, but you must understand there are limitations\non data storage between versions. Example: Suspend Data 64,000 vs 4096 or Bookmark(location) 1000 vs 255.\nDepending on your use, your content may not squeeze into the SCORM 1.2 available space.  Because of this, log messages\nwill be output so you can monitor your cmi \"set\" value length.  Ultimately, a LMS may block your request because of this.\nThis API is meant to simplify common SCORM Tasks, but also offers the ability to use it 'long hand'. Several other\npublic API's are available online, some free some charge, and this is a best effort to boil it all down.\nDocumentation, samples, resources, and credits: ADL, Claude Ostyn, Pipwerks, SCORM.com\nGoals: SCORM For Everyone else, low overhead, simple API's, containment, and transparency.\n\nTypical CMI Usage (if used by itself):\nvar scorm = new SCORM_API({debug: true, exit_type: 'suspend'}),\nlmsconnected = scorm.initialize();\nscorm.getvalue('cmi.location');\nscorm.setvalue('cmi.location', '4');\nscorm.commit();\nscorm.terminate();\n\nHTML Event Setup:\nIf you choose not to use SCOBot tips for onload and onunload, onbeforeunload events you may need to make init, exit methods to do other things\nvs. directly referencing the SCORM API here.  Feel free to make those methods if you need to.  'window.top' can be used because\nsome deployments self occur within a popup in a IFRAME will not fire properly on exit, in some Mozilla browsers.  Last checked, window worked with\nJQuery 1.7+ however.  If you have issues trapping the unload event, please try window.top.\n$(window).bind('load', YOUR_INITIALIZATION_METHOD);\n$(window).bind('unload', YOUR_EXIT_METHOD);\n\nJSLint was recently changed and its throwing a \"use spaces, not tabs\" error.  I decided to switch to spaces.\nhttps://github.com/douglascrockford/JSLint/pull/140\n\nhttps://github.com/cybercussion/SCOBot",
            "author": "Mark Statkus <mark@cybercussion.com>",
            "license": "Copyright (c) 2009-2014, Cybercussion Interactive LLC\nAs of 3.0.0 this code is under a Creative Commons Attribution-ShareAlike 4.0 International License.",
            "requires": [
                "JQuery"
            ],
            "version": "3.1.0",
            "params": [
                {
                    "name": "options",
                    "description": "override default values",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 200,
            "description": "Debug\nBuilt-In Debug Functionality to output to console (Firebug, Inspector, Dev Tool etc ...)",
            "params": [
                {
                    "name": "msg",
                    "description": "Debug Message",
                    "type": "String"
                },
                {
                    "name": "lvl",
                    "description": "1=Error, 2=Warning, 3=Log, 4=Info",
                    "type": "Integer"
                }
            ],
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 251,
            "description": "No Console\nLack of support in older browsers forced this",
            "params": [
                {
                    "name": "msg",
                    "description": "Debug Message",
                    "type": "String"
                },
                {
                    "name": "lvl",
                    "description": "1=Error, 2=Warning, 3=Log, 4=Info",
                    "type": "*"
                }
            ],
            "itemtype": "event",
            "name": "debug fired when no console is available.  You could listen to this to put it in an alternative log.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 325,
            "description": "Find API\nAPI_1484_11 or API for SCORM 2004 or 1.2",
            "params": [
                {
                    "name": "win",
                    "description": "Window level",
                    "type": "Object"
                }
            ],
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 351,
            "description": "Centiseconds To ISO Duration\nBorrowed from Claude Ostyn, but touched up for JSLint/JavaScript and evil \"with\" statement",
            "params": [
                {
                    "name": "n",
                    "description": "Total Seconds",
                    "type": "Number"
                },
                {
                    "name": "bPrecise",
                    "description": "Only Set true if were dealing with months, years (highly unlikely)",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "SCORM 2004 Time PT0H0M0S Format",
                "type": "String"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 430,
            "description": "ISO Duration to Centisecond",
            "params": [
                {
                    "name": "str",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 500,
            "description": "Pad Time\nPads time with proper formatting (double digits)",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 508,
            "description": "ISO 8601 Date String UTC\nConverts date object into ISO 8601 standard\nreturns {String} ISO 8601 + UTC",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 517,
            "description": "ISO 8601 Date String\nConcerts date into ISO 8601 Standard",
            "return": {
                "description": "ISO 8601",
                "type": "String"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 528,
            "description": "ISO 8601 String to Date\nNot extremely clear yet if this is needed at a SCO level.  If not I'll remove it later.",
            "params": [
                {
                    "name": "str",
                    "description": "ISO8601",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Date Object or false",
                "type": "Object"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 573,
            "description": "Centiseconds To SCORM 1.2 Duration\nBorrowed from Claude Ostyn, but touched up for JSLint/JavaScript and evil \"with\" statement",
            "params": [
                {
                    "name": "n",
                    "description": "Total Seconds",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "SCORM 2004 Time PT0H0M0S Format",
                "type": "String"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 624,
            "description": "Make Boolean\nTurns 'yes', 'no', 'true', 'false', '0', '1' into true/false",
            "params": [
                {
                    "name": "str",
                    "description": "value to turn to boolean",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 653,
            "description": "Trigger Warning (internal to this API)\nThrows a console log when a SCORM API Error occurs",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 663,
            "description": "Trigger Exception",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 673,
            "description": "Get Last LMS Error Code\nError Code should be 0 if its anything else, a error has occurred",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 698,
            "description": "Get Last LMS Error Message\nError Message associated by error code",
            "params": [
                {
                    "name": "n",
                    "description": "error code",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "error message",
                "type": "String"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 748,
            "description": "Get Value (SCORM Call)\nGets the cmi object value requested",
            "params": [
                {
                    "name": "n",
                    "description": "CMI Object Path as String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "event",
            "name": "'getvalue'",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 879,
            "description": "Set Value (SCORM Call)\nSets the cmi object value by name",
            "params": [
                {
                    "name": "n",
                    "description": "CMI Object Path as String",
                    "type": "String"
                },
                {
                    "name": "v",
                    "description": "Value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "event",
            "name": "'setvalue'",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 1043,
            "description": "Commit (SCORM Call)\nCommits the Data to the Server via the LMS API.  SCORM Time done by default.",
            "return": {
                "description": "'true' or 'false'",
                "type": "String"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 1081,
            "description": "Initialize  (SCORM Call)\nInitializes the SCO",
            "return": {
                "description": "'true' or 'false'",
                "type": "String"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 1138,
            "description": "Terminate (SCORM Call)\nTerminates the SCO",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 1182,
            "description": "Get Objective By ID\nThis is fun, they make you go fish the objectives array integer by the ID.\nObjectives do not appear to be 'journaled' as object identifiers have to be unique.\nAs this method is seeking information it may trigger SCORM Errors on the LMS that hint that\nobjects haven't been defined yet.  This is perfectly normal.",
            "params": [
                {
                    "name": "id",
                    "description": "Alpha-Numeric Identification of the Interaction you're looking for",
                    "type": "*"
                }
            ],
            "return": {
                "description": "'false' if nothing found or id",
                "type": "String"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 1214,
            "description": "Get Interaction By ID\nThis is fun, they make you go fish the interactions array integer by the ID.\nI included this in the main SCORM API because this functionality should be stock.  You're\neither going to journal these (history) or treat them like states that you update.  You must decide that.",
            "params": [
                {
                    "name": "id",
                    "description": "Alpha-Numeric Identification of the Interaction you're looking for",
                    "type": "*"
                }
            ],
            "return": {
                "description": "'false' if nothing found or id",
                "type": "String"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 1245,
            "description": "Get interaction.n.objective By ID\nYou can have multiple objectives assigned to a interaction.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 1272,
            "description": "Get interaction.n.correct_responses By pattern\nYou can have multiple correct responses assigned to a interaction.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 1304,
            "description": "Init (Internal API)\nInitializes the SCORM API, and locates the LMS API",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 1351,
            "description": "Get Last Error (Internal API)\nConverts error integer to Message String",
            "params": [
                {
                    "name": "n",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value",
                "type": "String"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 1361,
            "description": "Is LMS Connected\nWill tell you if LMS is truly connected or not.  You may be running locally.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 1370,
            "description": "Set (Internal API)\nThis locally sets values local to this API",
            "params": [
                {
                    "name": "n",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "v",
                    "description": "(String,Number,Object,Array,Boolean} value"
                }
            ],
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 1402,
            "description": "Get (Internal API)\nThis locally gets values local to this API",
            "params": [
                {
                    "name": "n",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value or {Boolean} false",
                "type": "*"
            },
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SCORM.API.js",
            "line": 1417,
            "description": "Hook for External Plugins like Flash to set Time\nPublic to Private API's",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 263,
            "description": "Function to go to next slide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 270,
            "description": "Function to go to previous slide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 277,
            "description": "Function to move n slides and change the thumbnails and focus\nn > 0 (advance slides)\nn < 0 (go back)",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 299,
            "description": "Go to the slide no",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 343,
            "description": "Go to the last slide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 377,
            "description": "Function to open a subslide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 406,
            "description": "Function to close a subslide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SnapshotPlayer.js",
            "line": 3,
            "description": "Load web snapshots",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SnapshotPlayer.js",
            "line": 29,
            "description": "Unload websnapshots",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Tour.js",
            "line": 3,
            "description": "Function to start a tutorial\ntipLocation can be 'top' or 'bottom' in relation to parent element",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.Loader.js",
            "line": 159,
            "description": "Function to dinamically add a css",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.js",
            "line": 135,
            "description": "Return a unic id.\nfull_id_prefix: Specify a prefix for the id, for example, article to get \"article_x\" ids.\nSpecify a separator for nested ids.\njustCheck: only check if the id is really unic, if not generate a new id.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.js",
            "line": 177,
            "description": "Fix presentations with old JSON format\nTry to update them to current version\nReturn null if presentation is irretrievable",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.js",
            "line": 207,
            "description": "Check slide types and fix it",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.js",
            "line": 682,
            "description": "Function to get width in pixels from a style attribute.\nIf width attribute is given by percent, area (parent container) attribute is needed.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.js",
            "line": 690,
            "description": "Function to get width in pixels from a style attribute.\nIf width attribute is given by percent, area (parent container) attribute is needed.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.js",
            "line": 699,
            "description": "Function to get width and height in pixels from a style attribute.\nIf widht or height attribute is given by percent, area (parent container) attribute is needed to convert to pixels.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Video.HTML5.js",
            "line": 130,
            "description": "Function to play all videos and audios of a slide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Video.HTML5.js",
            "line": 151,
            "description": "Function to stop all videos and audios of a slide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Video.Youtube.js",
            "line": 243,
            "description": "Function to pause a specific video",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Video.Youtube.js",
            "line": 270,
            "description": "Function to pause a specific video",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Viewer.js",
            "line": 9,
            "description": "Function to initialize the Viewer, saves the slides object and init the presentation with it\noptions is a hash with params and options from the server.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Viewer.js",
            "line": 122,
            "description": "Function called when entering slide in viewer, we have to show the objects",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Viewer.js",
            "line": 179,
            "description": "Function called when leaving a slide in viewer",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Viewer.js",
            "line": 204,
            "description": "function to update the number that indicates what slide is diplayed\nwith this format: 1/12 2/12",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.ViewerAdapter.js",
            "line": 140,
            "description": "Function to hide/show the page-switchers buttons and arrows\nhide the left one if on first slide\nhide the right one if on last slide -> always show it, it will show the recommendations if on last slide\nshow both otherwise",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.ViewerAdapter.js",
            "line": 227,
            "description": "Function to adapt the slides to the screen size",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.ViewerAdapter.js",
            "line": 382,
            "description": "Fancybox resizing. If a fancybox is opened, resize it",
            "class": "",
            "namespace": "VISH"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: fileoverview",
            "line": " libs/ckeditor/lang/fa.js:11"
        },
        {
            "message": "unknown tag: fileoverview",
            "line": " libs/ckeditor/lang/ku.js:11"
        },
        {
            "message": "unknown tag: name",
            "line": " libs/ckeditor/plugins/autogrow/plugin.js:83"
        },
        {
            "message": "unknown tag: name",
            "line": " libs/ckeditor/plugins/autogrow/plugin.js:93"
        },
        {
            "message": "unknown tag: name",
            "line": " libs/ckeditor/plugins/autogrow/plugin.js:103"
        },
        {
            "message": "unknown tag: license",
            "line": " scorm/SCOBot.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " scorm/SCOBot.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:71"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:91"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:125"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:147"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:173"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:192"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:228"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:238"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:258"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:309"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:581"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:767"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:784"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:931"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1055"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1114"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1125"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1149"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1160"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1170"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1228"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1257"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1425"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1514"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1585"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1707"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1718"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1733"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1749"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1765"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCOBot.js:1792"
        },
        {
            "message": "unknown tag: license",
            "line": " scorm/SCORM_API.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " scorm/SCORM_API.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:180"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:346"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:403"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:452"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:481"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:501"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:526"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:575"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:705"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:868"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:905"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:961"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:1002"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:1033"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:1118"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:1164"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " scorm/SCORM_API.js:1212"
        },
        {
            "message": "unknown tag: license",
            "line": " VISH.SCORM.API.js:103"
        },
        {
            "message": "unknown tag: version",
            "line": " VISH.SCORM.API.js:103"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:351"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:517"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:573"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:624"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:653"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:673"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:698"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:748"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:879"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:1043"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:1081"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:1138"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:1182"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:1214"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:1304"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:1351"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " VISH.SCORM.API.js:1402"
        },
        {
            "message": "Missing item type",
            "line": " libs/ckeditor/lang/fa.js:11"
        },
        {
            "message": "Missing item type",
            "line": " libs/ckeditor/lang/fa.js:16"
        },
        {
            "message": "Missing item type\nContains the dictionary of language entries.",
            "line": " libs/ckeditor/lang/fa.js:21"
        },
        {
            "message": "Missing item type\nThe language reading direction. Possible values are \"rtl\" for\nRight-To-Left languages (like Arabic) and \"ltr\" for Left-To-Right\nlanguages (like English).",
            "line": " libs/ckeditor/lang/fa.js:27"
        },
        {
            "message": "Missing item type",
            "line": " libs/ckeditor/lang/ku.js:11"
        },
        {
            "message": "Missing item type",
            "line": " libs/ckeditor/lang/ku.js:15"
        },
        {
            "message": "Missing item type\nContains the dictionary of language entries.",
            "line": " libs/ckeditor/lang/ku.js:20"
        },
        {
            "message": "Missing item type\nThe language reading direction. Possible values are \"rtl\" for\nRight-To-Left languages (like Arabic) and \"ltr\" for Left-To-Right\nlanguages (like English).",
            "line": " libs/ckeditor/lang/ku.js:26"
        },
        {
            "message": "Missing item type",
            "line": " AutoGrow plugin:6"
        },
        {
            "message": "Missing item type\nThe minimum height to which the editor can reach using AutoGrow.",
            "line": " libs/ckeditor/plugins/autogrow/plugin.js:83"
        },
        {
            "message": "Missing item type\nThe maximum height to which the editor can reach using AutoGrow. Zero means unlimited.",
            "line": " libs/ckeditor/plugins/autogrow/plugin.js:93"
        },
        {
            "message": "Missing item type\nFeature detection",
            "line": " libs/jquery.form.js:53"
        },
        {
            "message": "Missing item type\najaxSubmit() provides a mechanism for immediately submitting\nan HTML form using AJAX.",
            "line": " libs/jquery.form.js:60"
        },
        {
            "message": "Missing item type\najaxForm() provides a mechanism for fully automating form submission.\n\nThe advantages of using this method instead of ajaxSubmit() are:\n\n1: This method will include coordinates for <input type=\"image\" /> elements (if the element\n   is used to submit the form).\n2. This method will include the submit element's name/value data (for the element that was\n   used to submit the form).\n3. This method binds the submit() method to the form for you.\n\nThe options argument for ajaxForm works exactly as it does for ajaxSubmit.  ajaxForm merely\npasses the options argument along after properly binding events for submit elements and\nthe form itself.",
            "line": " libs/jquery.form.js:664"
        },
        {
            "message": "Missing item type\nformToArray() gathers form element data into an array of objects that can\nbe passed to any of the following ajax functions: $.get, $.post, or load.\nEach object in the array has both a 'name' and 'value' property.  An example of\nan array for a simple login form might be:\n\n[ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]\n\nIt is this array that is passed to pre-submit callback functions provided to the\najaxSubmit() and ajaxForm() methods.",
            "line": " libs/jquery.form.js:759"
        },
        {
            "message": "Missing item type\nSerializes form data into a 'submittable' string. This method will return a string\nin the format: name1=value1&amp;name2=value2",
            "line": " libs/jquery.form.js:840"
        },
        {
            "message": "Missing item type\nSerializes all field elements in the jQuery object into a query string.\nThis method will return a string in the format: name1=value1&amp;name2=value2",
            "line": " libs/jquery.form.js:849"
        },
        {
            "message": "Missing item type\nReturns the value(s) of the element in the matched set.  For example, consider the following form:\n\n <form><fieldset>\n     <input name=\"A\" type=\"text\" />\n     <input name=\"A\" type=\"text\" />\n     <input name=\"B\" type=\"checkbox\" value=\"B1\" />\n     <input name=\"B\" type=\"checkbox\" value=\"B2\"/>\n     <input name=\"C\" type=\"radio\" value=\"C1\" />\n     <input name=\"C\" type=\"radio\" value=\"C2\" />\n </fieldset></form>\n\n var v = $(':text').fieldValue();\n // if no values are entered into the text inputs\n v == ['','']\n // if values entered into the text inputs are 'foo' and 'bar'\n v == ['foo','bar']\n\n var v = $(':checkbox').fieldValue();\n // if neither checkbox is checked\n v === undefined\n // if both checkboxes are checked\n v == ['B1', 'B2']\n\n var v = $(':radio').fieldValue();\n // if neither radio is checked\n v === undefined\n // if first radio is checked\n v == ['C1']\n\nThe successful argument controls whether or not the field element must be 'successful'\n(per http://www.w3.org/TR/html4/interact/forms.html#successful-controls).\nThe default value of the successful argument is true.  If this value is false the value(s)\nfor each element is returned.\n\nNote: This method *always* returns an array.  If no valid value can be determined the\n   array will be empty, otherwise it will contain one or more values.",
            "line": " libs/jquery.form.js:874"
        },
        {
            "message": "Missing item type\nReturns the value of the field element.",
            "line": " libs/jquery.form.js:927"
        },
        {
            "message": "Missing item type\nClears the form data.  Takes the following actions on the form's input fields:\n - input text fields will have their 'value' property set to the empty string\n - select elements will have their 'selectedIndex' property set to -1\n - checkbox and radio inputs will have their 'checked' property set to false\n - inputs of type submit, button, reset, and hidden will *not* be effected\n - button elements will *not* be effected",
            "line": " libs/jquery.form.js:969"
        },
        {
            "message": "Missing item type\nClears the selected form elements.",
            "line": " libs/jquery.form.js:983"
        },
        {
            "message": "Missing item type\nResets the form data.  Causes all form elements to be reset to their original value.",
            "line": " libs/jquery.form.js:1011"
        },
        {
            "message": "Missing item type\nEnables or disables any matching elements.",
            "line": " libs/jquery.form.js:1024"
        },
        {
            "message": "Missing item type\nChecks/unchecks any matching checkboxes or radio buttons and\nselects/deselects and matching option elements.",
            "line": " libs/jquery.form.js:1036"
        },
        {
            "message": "Missing item type\nThis is a sample SCORM Startup sequence and handicap API's for ease of use.\nGeneral Concept: When the LMS connects, call var SB = new SCOBot();\nSCOBot\nThis only works with the SCORM_API, but has the basis to work with other API's.\nSeveral public API's will call one to many SCORM Calls and this will make every attempt to\ndo common SCORM Tasks or boil down SCORM tasks into a smaller easy to use method.\nMode: {get} Browse, Review, Normal\nBookmark: {get/set} SCO Progress\nSuspend Data: {get/set} Suspend Data Object\nInteractions: {set} Interaction(s)\nObjectives: {set} Objective(s)\n\nJSLint recently complained about  tabs.  Switched to spaces.\n\nhttps://github.com/cybercussion/SCOBot",
            "line": " scorm/SCOBot.js:3"
        },
        {
            "message": "Missing item type",
            "line": " scorm/SCOBot.js:35"
        },
        {
            "message": "Missing item type\nTrigger Warning (internal to this API)\nThrows a console log when a SCORM API Error occurs",
            "line": " scorm/SCOBot.js:125"
        },
        {
            "message": "Missing item type\nTrigger Exception\nThrows an event the player can listen to in order to handle an exception.\nThis would be common to a non-compliance in an LMS and loss of student data.",
            "line": " scorm/SCOBot.js:135"
        },
        {
            "message": "Missing item type\nIs Performing\nThis is based on cmi.success_status",
            "line": " scorm/SCOBot.js:147"
        },
        {
            "message": "Missing item type\nVerify cmi score scaled\nValidates if success_status is passed, and exit_type is normal.  Checks that score.max is 1.\nMay need to tighten this up later, its mostly for SCO's that default to normal and expect them to be complete.",
            "line": " scorm/SCOBot.js:157"
        },
        {
            "message": "Missing item type\nIs Bad Value\nWe get a variety of responses from an LMS",
            "line": " scorm/SCOBot.js:173"
        },
        {
            "message": "Missing item type\nCleanse Data\nThis will escape out characters that may of been cross-contaminated from other proprietary sources.\nThese can often result in UTF-8 and other encoding issues and may result in errors.",
            "line": " scorm/SCOBot.js:182"
        },
        {
            "message": "Missing item type\nIs ISO 8601\nI've got a RegEx to validate ISO 8601 time based on SCORM 2004 Formats.\nThis is a great common way to do this so regardless of time zone you can reflect the\ntime this time stamp was referring to.\nAcceptable Format GMT 2012-02-28T15:00:00.0-8:00, UTC 2012-02-28T15:00:00.0-8:00Z, Plain 2012-02-28T15:00:00",
            "line": " scorm/SCOBot.js:192"
        },
        {
            "message": "Missing item type\nis ISO 8601 Duration\nThis is a PT0H0M0S format",
            "line": " scorm/SCOBot.js:217"
        },
        {
            "message": "Missing item type\nNot Started Yet\nYou should never see this message, but I found I may need to trace this more than once.",
            "line": " scorm/SCOBot.js:228"
        },
        {
            "message": "Missing item type\nCurrent Time",
            "line": " scorm/SCOBot.js:238"
        },
        {
            "message": "Missing item type\nTrue Round\nMay consider using this to fit within real(10,7) scoring in the event the decimal goes over 7 digits",
            "line": " scorm/SCOBot.js:246"
        },
        {
            "message": "Missing item type\nFind Response Type (May not use this)\nThis is designed to check for {case_matters: true/false}, {order_matters: true/false} or {lang: x}",
            "line": " scorm/SCOBot.js:258"
        },
        {
            "message": "Missing item type\nTimes Up",
            "line": " scorm/SCOBot.js:284"
        },
        {
            "message": "Missing item type\nSet Value By Interaction Type\nThis is a data filter to convert input formats into SCORM standard strings.  Please review each interaction for what it expects.\nThis will not enforce SCORM char limits, so please mind your logs if your doing something your not suppose to.",
            "line": " scorm/SCOBot.js:309"
        },
        {
            "message": "Missing item type\nNumeric\ncomments coming",
            "line": " scorm/SCOBot.js:542"
        },
        {
            "message": "Missing item type\nDecode Value By Interaction Type\nThis is a data filter to convert input formats from SCORM standard strings to there native JS equivalent.",
            "line": " scorm/SCOBot.js:581"
        },
        {
            "message": "Missing item type\nNumeric\nThis falls into a simple hand off",
            "line": " scorm/SCOBot.js:742"
        },
        {
            "message": "Missing item type\nSet Suspend Data\nThis will set existing suspend data managed by escaping the values",
            "line": " scorm/SCOBot.js:767"
        },
        {
            "message": "Missing item type\nCheck Progress\nThis should be used sparingly.  Its going to total up the scoring real-time based on any interactions and objectives.\ncmi.score.scaled,\ncmi.success_status,\ncmi.completion_status,\ncmi.progress_measure",
            "line": " scorm/SCOBot.js:784"
        },
        {
            "message": "Missing item type\nGet Comments From LMS\nChecks to see if there are any comments from the LMS, and will\nreturn a complete object back for use with a display.",
            "line": " scorm/SCOBot.js:872"
        },
        {
            "message": "Missing item type\nUpdate Status\nRolled up success/completion status functionality",
            "line": " scorm/SCOBot.js:905"
        },
        {
            "message": "Missing item type\nStart (Internal API)\nInitializes the SCORM Startup, and communicates with SCORM (cruise control)\nand will begin to store some common used parameters for use later. Like:\n1. mode\n2. location (bookmark)\n3. scaled_passing_score\n4. suspend_data\n5. completion_status\n6. success_status\nThese can be obtained by asking SB.get('location'); i.e. the name space for these after you start,\nand during the session.",
            "line": " scorm/SCOBot.js:931"
        },
        {
            "message": "Missing item type\nSet Totals\nThis will take in total objectives, interactions, score max and score min to aid\nin the calculation of a score rollup.",
            "line": " scorm/SCOBot.js:1055"
        },
        {
            "message": "Missing item type\nStart Timer\nThis will begin the timer based on the time provided by max_time_allowed.  This depends on the time_limit_action.",
            "line": " scorm/SCOBot.js:1088"
        },
        {
            "message": "Missing item type\nDebug\nRelay so you don't have to say scorm vs SB",
            "line": " scorm/SCOBot.js:1096"
        },
        {
            "message": "Missing item type\nGet Value\nRelay so you can keep talking to SCOBot for one-to-one SCORM calls.",
            "line": " scorm/SCOBot.js:1102"
        },
        {
            "message": "Missing item type\nSet Value\nRelay so you can keep talking to SCObot for one-to-one SCORM calls.",
            "line": " scorm/SCOBot.js:1108"
        },
        {
            "message": "Missing item type\nGet Mode\nThis will return the current SCO Mode we are in (normal, browse, review)",
            "line": " scorm/SCOBot.js:1114"
        },
        {
            "message": "Missing item type\nGet Entry\nThis will return the entry type (ab-initio, resume or \"\")",
            "line": " scorm/SCOBot.js:1125"
        },
        {
            "message": "Missing item type\nSet Bookmark\nThis will update the local snap shot, and update SCORM (commit still required)",
            "line": " scorm/SCOBot.js:1136"
        },
        {
            "message": "Missing item type\nGet Bookmark\nThis will return the local snapshot, but is in sync with cmi.location",
            "line": " scorm/SCOBot.js:1149"
        },
        {
            "message": "Missing item type\nProgress\nHooks to Private method used possibly elsewhere in this API\ncmi.score.scaled,\ncmi.success_status,\ncmi.completion_status,\ncmi.progress_measure",
            "line": " scorm/SCOBot.js:1160"
        },
        {
            "message": "Missing item type\nSet Suspend Data By Page ID\nThis will set the suspend data by id (could be a page ID as long as its unique)\nSuspend data is a 64,000 character string.  In this case it will be a JSON Object that\nfreely converts to a JSON String or Object.\nNow you could require that the end user have a id in their data object, or in this case keep it\nseparate for search ability.  Either way you'll have to verify they are passing a id.\nI've opted to make them pass the ID.  I'm also opting to keep this as a object instead of\njust a page array.  You may want to add more things to suspend data than just pages.\nExample structure of this:\n{\n sco_id: '12345',\n name: 'value',\n pages: [\n     {\n         id: 1,\n         title: 'Presentation',\n         data: {data object for a page}\n     },\n     {\n         id: 2,\n         title: 'Match Game',\n         data: {data object for a page}\n    }\n ]\n};\nCalling commit will still be needed to truly save it.",
            "line": " scorm/SCOBot.js:1170"
        },
        {
            "message": "Missing item type\nGet Suspend Data By Page ID\nThis will get the suspend data by id",
            "line": " scorm/SCOBot.js:1228"
        },
        {
            "message": "Missing item type\nGet Time From Start",
            "line": " scorm/SCOBot.js:1250"
        },
        {
            "message": "Missing item type\nSet Interaction\nThis will set an interaction based on Journaling or State.\nParameter for choosing a version is located in the defaults.\nNote: If you are recording Journaling make sure its something the LMS\nsupports or plans to support, or your just blimping out your interactions array\nfor no reason.\nYou may ask what is \"real(10,7)\".  This is a binary floating point with a precision up to 7 characters to the right of the decimal.\nExample Data Object:\n{\n id: '1',                             // 4000 chars\n type: 'true-false',                  // (true-false, choice, fill-in, long-fill-in, matching, performance, sequencing, likert, numeric, other)\n objectives: [\n   {\n      id: '12'\n   }\n ],\n timestamp: 'expects date object when interaction starts',  // second(10,0) Pass a date object\n correct_responses: [\n     {\n         pattern: ''                  // depends on interaction type\n     }\n ],\n weighting: '1',\n learner_response: 'true',\n result: 'correct',                   // (correct, incorrect, unanticipated, neutral, real (10,7) )\n latency: 'expects date object after interaction is done',  // second(10,2)\n description: \"The question commonly\" // 250 chars\n}",
            "line": " scorm/SCOBot.js:1257"
        },
        {
            "message": "Missing item type\nGet Interaction\nReturns the full Interaction object",
            "line": " scorm/SCOBot.js:1425"
        },
        {
            "message": "Missing item type\nSet Objective\nSets the data for the scorm objective.  ID's have to be set first and must be unique.\nExample data object\n{\n id: '1',                            // 4000 chars\n score: {\n     scaled: '0',                    // real(10,7) *\n     raw: '0',\n     min: '0',\n     max: '0'\n }\n success_status: 'failed',            // (passed, failed, unknown)\n completion_status: 'incomplete',     // (completed, incomplete, not attempted, unknown)\n progress_measure: '0',               // real(10,7)\n description: 'This is the objective' // 250 Chars\n}",
            "line": " scorm/SCOBot.js:1514"
        },
        {
            "message": "Missing item type\nGet Objective\nReturns the Objective object by ID",
            "line": " scorm/SCOBot.js:1585"
        },
        {
            "message": "Missing item type\nSet Comment From Learner\nThis will set the comment, location and time the student made a comment",
            "line": " scorm/SCOBot.js:1631"
        },
        {
            "message": "Missing item type\nGrade It\nThis method will set cmi.score.scaled, cmi.success_status, and cmi.completion_status.  This is for situations\nwhere you are doing simple scoring, with NO objectives or interactions.\nPrereq for this would be to have passed in scaled_passing_score and completion_threshold in to SCOBot\nIf none are provided it will default to 'passed' and 'completed'\nSpecial Note: If you are using Objectives, Interactions and set the totals, you do not need to use this method.",
            "line": " scorm/SCOBot.js:1657"
        },
        {
            "message": "Missing item type\nHappy Ending\nThis will auto-score the student to passed, completed, and scored",
            "line": " scorm/SCOBot.js:1690"
        },
        {
            "message": "Missing item type\nCommit\nThis will commit the data stored at the LMS Level to the backend.  Please use sparingly.",
            "line": " scorm/SCOBot.js:1707"
        },
        {
            "message": "Missing item type\nSuspend\nThis will suspend the SCO and ends with terminating.  No data can be saved after this.",
            "line": " scorm/SCOBot.js:1718"
        },
        {
            "message": "Missing item type\nFinish\nThis will set success status, exit and completion",
            "line": " scorm/SCOBot.js:1733"
        },
        {
            "message": "Missing item type\nTimeout\nThis will set success status, exit and completion",
            "line": " scorm/SCOBot.js:1749"
        },
        {
            "message": "Missing item type\nIs ISO 8601 UTC",
            "line": " scorm/SCOBot.js:1765"
        },
        {
            "message": "Missing item type\nSet\nThis locally sets values local to this API",
            "line": " scorm/SCOBot.js:1770"
        },
        {
            "message": "Missing item type\nGet\nThis locally gets values local to this API",
            "line": " scorm/SCOBot.js:1792"
        },
        {
            "message": "Missing item type\nWrap up Constructor\nCertain versions of mozilla had an issue with not firing the window unload event.\nAt the time, I used window.top to get around this.  Later I started seeing with JQuery\ndifferent behavior once I incorporated it.  So at this point I'm using window not window.top.",
            "line": " scorm/SCOBot.js:1806"
        },
        {
            "message": "Missing item type\nSCORM API\nThis is a content API, it self-establishes communication with the LMS in SCORM 2004 or 1.2.\nSwitch statements will convert some SCORM 2004 calls to SCORM 1.2, but you must understand there are limitations\non data storage between versions. Example: Suspend Data 64,000 vs 4096 or Bookmark(location) 1000 vs 255.\nDepending on your use, your content may not squeeze into the SCORM 1.2 available space.  Because of this, log messages\nwill be output so you can monitor your cmi \"set\" value length.  Ultimately, a LMS may block your request because of this.\nThis API is meant to simplify common SCORM Tasks, but also offers the ability to use it 'long hand'. Several other\npublic API's are available online, some free some charge, and this is a best effort to boil it all down.\nDocumentation, samples, resources, and credits: ADL, Claude Ostyn, Pipwerks, SCORM.com\nGoals: SCORM For Everyone else, low overhead, simple API's, containment, and transparency.\n\nTypical CMI Usage (if used by itself):\nvar scorm = new SCORM_API({debug: true, exit_type: 'suspend'}),\n    lmsconnected = scorm.initialize();\nscorm.getvalue('cmi.location');\nscorm.setvalue('cmi.location', '4');\nscorm.commit();\nscorm.terminate();\n\nHTML Event Setup:\nIf you choose not to use SCOBot tips for onload and onunload, onbeforeunload events you may need to make init, exit methods to do other things\nvs. directly referencing the SCORM API here.  Feel free to make those methods if you need to.  'window.top' can be used because\nsome deployments self occur within a popup in a IFRAME will not fire properly on exit, in some Mozilla browsers.  Last checked, window worked with\nJQuery 1.7+ however.  If you have issues trapping the unload event, please try window.top.\n$(window).bind('load', YOUR_INITIALIZATION_METHOD);\n$(window).bind('unload', YOUR_EXIT_METHOD);\n\nJSLint was recently changed and its throwing a \"use spaces, not tabs\" error.  I decided to switch to spaces.\nhttps://github.com/douglascrockford/JSLint/pull/140\n\nhttps://github.com/cybercussion/SCOBot",
            "line": " scorm/SCORM_API.js:3"
        },
        {
            "message": "Missing item type\nDebug\nBuilt-In Debug Functionality to output to console (Firebug, Inspector, Dev Tool etc ...)",
            "line": " scorm/SCORM_API.js:113"
        },
        {
            "message": "Missing item type\nFind API\nAPI_1484_11 or API for SCORM 2004 or 1.2",
            "line": " scorm/SCORM_API.js:154"
        },
        {
            "message": "Missing item type\nCentiseconds To ISO Duration\nBorrowed from Claude Ostyn, but touched up for JSLint/JavaScript and evil \"with\" statement",
            "line": " scorm/SCORM_API.js:180"
        },
        {
            "message": "Missing item type\nISO Duration to Centisecond",
            "line": " scorm/SCORM_API.js:259"
        },
        {
            "message": "Missing item type\nPad Time\nPads time with proper formatting (double digits)",
            "line": " scorm/SCORM_API.js:329"
        },
        {
            "message": "Missing item type\nISO 8601 Date String UTC\nConverts date object into ISO 8601 standard\nreturns {String} ISO 8601 + UTC",
            "line": " scorm/SCORM_API.js:337"
        },
        {
            "message": "Missing item type\nISO 8601 Date String\nConcerts date into ISO 8601 Standard",
            "line": " scorm/SCORM_API.js:346"
        },
        {
            "message": "Missing item type\nISO 8601 String to Date\nNot extremely clear yet if this is needed at a SCO level.  If not I'll remove it later.",
            "line": " scorm/SCORM_API.js:357"
        },
        {
            "message": "Missing item type\nCentiseconds To SCORM 1.2 Duration\nBorrowed from Claude Ostyn, but touched up for JSLint/JavaScript and evil \"with\" statement",
            "line": " scorm/SCORM_API.js:403"
        },
        {
            "message": "Missing item type\nMake Boolean\nTurns 'yes', 'no', 'true', 'false', '0', '1' into true/false",
            "line": " scorm/SCORM_API.js:452"
        },
        {
            "message": "Missing item type\nTrigger Warning (internal to this API)\nThrows a console log when a SCORM API Error occurs",
            "line": " scorm/SCORM_API.js:481"
        },
        {
            "message": "Missing item type\nTrigger Exception",
            "line": " scorm/SCORM_API.js:491"
        },
        {
            "message": "Missing item type\nGet Last LMS Error Code\nError Code should be 0 if its anything else, a error has occurred",
            "line": " scorm/SCORM_API.js:501"
        },
        {
            "message": "Missing item type\nGet Last LMS Error Message\nError Message associated by error code",
            "line": " scorm/SCORM_API.js:526"
        },
        {
            "message": "Missing item type\nCommit (SCORM Call)\nCommits the Data to the Server via the LMS API.  SCORM Time done by default.",
            "line": " scorm/SCORM_API.js:868"
        },
        {
            "message": "Missing item type\nInitialize  (SCORM Call)\nInitializes the SCO",
            "line": " scorm/SCORM_API.js:905"
        },
        {
            "message": "Missing item type\nTerminate (SCORM Call)\nTerminates the SCO",
            "line": " scorm/SCORM_API.js:961"
        },
        {
            "message": "Missing item type\nGet Objective By ID\nThis is fun, they make you go fish the objectives array integer by the ID.\nObjectives do not appear to be 'journaled' as object identifiers have to be unique.\nAs this method is seeking information it may trigger SCORM Errors on the LMS that hint that\nobjects haven't been defined yet.  This is perfectly normal.",
            "line": " scorm/SCORM_API.js:1002"
        },
        {
            "message": "Missing item type\nGet Interaction By ID\nThis is fun, they make you go fish the interactions array integer by the ID.\nI included this in the main SCORM API because this functionality should be stock.  You're\neither going to journal these (history) or treat them like states that you update.  You must decide that.",
            "line": " scorm/SCORM_API.js:1033"
        },
        {
            "message": "Missing item type\nGet interaction.n.objective By ID\nYou can have multiple objectives assigned to a interaction.",
            "line": " scorm/SCORM_API.js:1063"
        },
        {
            "message": "Missing item type\nGet interaction.n.correct_responses By pattern\nYou can have multiple correct responses assigned to a interaction.",
            "line": " scorm/SCORM_API.js:1089"
        },
        {
            "message": "Missing item type\nInit (Internal API)\nInitializes the SCORM API, and locates the LMS API",
            "line": " scorm/SCORM_API.js:1118"
        },
        {
            "message": "Missing item type\nGet Last Error (Internal API)\nConverts error integer to Message String",
            "line": " scorm/SCORM_API.js:1164"
        },
        {
            "message": "Missing item type\nIs LMS Connected\nWill tell you if LMS is truly connected or not.  You may be running locally.",
            "line": " scorm/SCORM_API.js:1173"
        },
        {
            "message": "Missing item type\nSet (Internal API)\nThis locally sets values local to this API",
            "line": " scorm/SCORM_API.js:1181"
        },
        {
            "message": "Missing item type\nGet (Internal API)\nThis locally gets values local to this API",
            "line": " scorm/SCORM_API.js:1212"
        },
        {
            "message": "Missing item type\nHook for External Plugins like Flash to set Time\nPublic to Private API's",
            "line": " scorm/SCORM_API.js:1226"
        },
        {
            "message": "Missing item type\nFunction to add an applet element to the slide\nthe applet is inside the archive, width, height and params attributes of the div",
            "line": " VISH.AppletPlayer.js:3"
        },
        {
            "message": "Missing item type\nFunction to remove the applets of the presentation",
            "line": " VISH.AppletPlayer.js:15"
        },
        {
            "message": "Missing item type\nProvide an API with ViSH (Virtual Science Hub)",
            "line": " VISH.Editor.API.js:1"
        },
        {
            "message": "Missing item type\nRequest IMAGES in json format\nThe request is: GET /search.json?type=picture&q=text",
            "line": " VISH.Editor.API.js:9"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request recommended images",
            "line": " VISH.Editor.API.js:44"
        },
        {
            "message": "Missing item type\nRequest VIDEOS in json format\nThe request is: GET /search.json?type=video&q=text",
            "line": " VISH.Editor.API.js:63"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request recommended videos",
            "line": " VISH.Editor.API.js:99"
        },
        {
            "message": "Missing item type\nRequest OBJECTS in json format\nThe request is: GET /search.json?object=1&q=text",
            "line": " VISH.Editor.API.js:117"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request recommended objects",
            "line": " VISH.Editor.API.js:152"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request live objects in json format\nThe request is:\nGET /search.json?live=1&q=",
            "line": " VISH.Editor.API.js:170"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request recommended lives objects",
            "line": " VISH.Editor.API.js:207"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request excursions in json format\nThe request is:\nGET /excursions/search.json?type=&q=text",
            "line": " VISH.Editor.API.js:225"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request recommended excursions",
            "line": " VISH.Editor.API.js:262"
        },
        {
            "message": "Missing item type\ngeneric function to call VISH and request by query and type\nThe request is:\nGET /search.json?type=type&q=query",
            "line": " VISH.Editor.API.js:280"
        },
        {
            "message": "Missing item type\nSpecific function to call VISH and request lives\nThe request is:\nGET /resources/search.json?live=1&q=",
            "line": " VISH.Editor.API.js:314"
        },
        {
            "message": "Missing item type\nSpecific function to call VISH and request excursions\nThe request is:\nGET /excursions/search.json?type=&q=query",
            "line": " VISH.Editor.API.js:339"
        },
        {
            "message": "Missing item type\nFunction to call VISH and request tags",
            "line": " VISH.Editor.API.js:367"
        },
        {
            "message": "Missing item type\nFunction to get the available avatars from the server, they should be at /excursion_thumbnails.json",
            "line": " VISH.Editor.API.js:405"
        },
        {
            "message": "Missing item type\nFunction to replace dummy ids",
            "line": " VISH.Editor.Dummies.js:97"
        },
        {
            "message": "Missing item type\nTutorial\nFunction to add the events to the help buttons to launch joy ride bubbles",
            "line": " VISH.Editor.Events.js:228"
        },
        {
            "message": "Missing item type\nFunction to draw an image in a zone of the template\nthe zone to draw is the one in current_area\nthis function also makes the image draggable\nparam area: optional param indicating the area to add the image, used for editing presentations\nparam style: optional param with the style, used in editing presentation",
            "line": " VISH.Editor.Image.js:187"
        },
        {
            "message": "Missing item type\nfunction to call to LRE and request images\nsuccessCallback: function to pass the results if everything goes well.\nfailCallback: function to pass the error if something fails. Format: {\"error\":\"cnf cannot be null!\"}",
            "line": " VISH.Editor.LRE.js:26"
        },
        {
            "message": "Missing item type\nfunction to call to LRE and request objects (webs, etc.)\nsuccessCallback: function to pass the results if everything goes well.\nfailCallback: function to pass the error if something fails. Format: {\"error\":\"cnf cannot be null!\"}",
            "line": " VISH.Editor.LRE.js:47"
        },
        {
            "message": "Missing item type\nGeneric function to call LRE and request for content with some params\nVISH acts as a proxy, so this method sends it the query and the number of objects to receive\nVISH will call the LRE server and will take the returned ids and will ask for them\n     returning the array with the metadata for the results, so this client do not need to do two requests\nlimit: number of items to return\nresponse_type: the type of array that we want as response (it can be \"image\" or \"object\")\nsuccessCallback: function to pass the results if everything goes well\nfailCallback: function to pass the error if something fails. Format: {\"error\":\"cnf cannot be null!\"}\nThe request is:\nGET /lre/search?q=query&limit=10",
            "line": " VISH.Editor.LRE.js:57"
        },
        {
            "message": "Missing item type\ngeneric function to compose a valid query to send to the LRE\nexplanations of params:\n\nterms: array of terms to be searched. Example [\"biology\", \"nature\"] -> search in LRE content containing \"biology\" AND \"nature\"\nlrt: array of learning resource types. See the LRE Metadata Application Profile at page 35 of http://lreforschools.eun.org/c/document_library/get_file?\n\t\tp_l_id=10970&folderId=12073&name=DLFE-1.pdf (i.e: audio, data, image, text, video)\n     if not specified we request for all lrt\nlanguage: language of the learning object searched as ISO639-1 code -> example: en, es, pt\nNOT USED MAXAGE AND MINAGE BECAUSE LRE RETURNED NO RESULTS:",
            "line": " VISH.Editor.LRE.js:88"
        },
        {
            "message": "Missing item type\nfunction to change the metadata returned by the \nLRE to a simple format similar to the one that we use in VISH repository\nThis method is public so I can call it from command line to test it with \nV.Editor.LRE.formatLREResponse(VISH.Samples.API.LREImageList)\nIMPORTANT: THIS METHOD REMOVES FROM THE ARRAY THE \"PROVIDERS_TO_REMOVE\" PROVIDERS",
            "line": " VISH.Editor.LRE.js:120"
        },
        {
            "message": "Missing item type\nFunction to format one element from LRE to our format\nif type is \"image\" returns null if not a raw image (sometimes it is a website or other thing)\nThe final format is for \"image\": \n\t  \t{\n\t  \t\t\"id\":54,\n\t\t\t\"title\":\"ClintEastwood.jpg\",\n\t\t\t\"description\":null,\n\t\t\t\"author\":\"Demo\",\n\t\t\t\"src\":\"http://www.dan-dare.org/dan%20simpsons/TheSimpsonsEveryoneEver800.jpg\"\n\t\t}\n\t\tand for \"object\":\n\t\t{\n\t      'id'     : '1534',\n\t      'title'         :  'Game Strauss',\n\t      'description'   :  'Fichero PDF',\n\t      'author'        :  'Conspirazzi',\n\t      'object'        :  'http://www.conspirazzi.com/e-books/game-strauss.pdf',\n\t      'thumbnail'\t  : 'http://lrethumbnails.eun.org/995/445995.png'\n\t    }",
            "line": " VISH.Editor.LRE.js:152"
        },
        {
            "message": "Missing item type\nfunction to get the SRC from the my_element",
            "line": " VISH.Editor.LRE.js:214"
        },
        {
            "message": "Missing item type\nfunction to check if a returned image element has any manifestation as webBrowser",
            "line": " VISH.Editor.LRE.js:241"
        },
        {
            "message": "Missing item type\nfunction to get title and description in your lang or in english if not your lang present",
            "line": " VISH.Editor.LRE.js:263"
        },
        {
            "message": "Missing item type\nParam style: optional param with the style, used in editing presentation",
            "line": " VISH.Editor.Object.Snapshot.js:73"
        },
        {
            "message": "Missing item type\nReturns a object prepared to draw.\nparam options.area: optional param indicating the area to add the object, used for editing presentations\nparam options.style: optional param with the style, used in editing presentation",
            "line": " VISH.Editor.Object.js:399"
        },
        {
            "message": "Missing item type\nparam style: optional param with the style, used in editing presentation",
            "line": " VISH.Editor.Object.js:500"
        },
        {
            "message": "Missing item type\nInsert the selected slides of a slide presentation in JSON",
            "line": " VISH.Editor.Presentation.js:31"
        },
        {
            "message": "Missing item type\nFunction to initialize the renderer",
            "line": " VISH.Editor.Renderer.js:5"
        },
        {
            "message": "Missing item type\nfunction to render one slide in editor",
            "line": " VISH.Editor.Renderer.js:40"
        },
        {
            "message": "Missing item type\nFunction to render slidesets",
            "line": " VISH.Editor.Renderer.js:119"
        },
        {
            "message": "Missing item type\nfunction called when the user clicks on the save button\nin the initial presentation details fancybox to save\nthe data in order to be stored at the end in the JSON file",
            "line": " VISH.Editor.Settings.js:406"
        },
        {
            "message": "Missing item type\nfunction called when the user clicks on the pedagogical options button",
            "line": " VISH.Editor.Settings.js:604"
        },
        {
            "message": "Missing item type\nfunction called when the user clicks on the done button in the pedagogical options panel",
            "line": " VISH.Editor.Settings.js:613"
        },
        {
            "message": "Missing item type\nfunction to know if the slides have the focus or not\nUse to disable actions (like keyboard shortcuts) when the slide is not focused",
            "line": " VISH.Editor.Slides.js:19"
        },
        {
            "message": "Missing item type\nFunction to go to next subslide in a slideset",
            "line": " VISH.Editor.Slides.js:51"
        },
        {
            "message": "Missing item type\nFunction to go to previous subslide in a slideset",
            "line": " VISH.Editor.Slides.js:58"
        },
        {
            "message": "Missing item type\nFunction to move n subslides and change the thumbnails and focus\nn > 0 (advance subslides)\nn < 0 (go back)",
            "line": " VISH.Editor.Slides.js:65"
        },
        {
            "message": "Missing item type\nGo to the subslide no",
            "line": " VISH.Editor.Slides.js:89"
        },
        {
            "message": "Missing item type\nFunction called when user clicks on the text thumb\nAllows users to include text content in the slide using a WYSIWYG editor\nparam area: optional param indicating the area to add the wysiwyg, used for editing presentations",
            "line": " VISH.Editor.Text.js:79"
        },
        {
            "message": "Missing item type\nFunction to select the thumbnail",
            "line": " VISH.Editor.Thumbnails.js:145"
        },
        {
            "message": "Missing item type\nfunction called when user clicks on save\nGenerates the json for the current slides\ncovers the section element and every article inside\nfinally calls V.Viewer with the generated json",
            "line": " VISH.Editor.Tools.Menu.js:101"
        },
        {
            "message": "Missing item type\nParses a ISO8601 period string.",
            "line": " VISH.Editor.Utils.iso8601Parser.js:51"
        },
        {
            "message": "Missing item type\nfunction to get the styles in percentages",
            "line": " VISH.Editor.Utils.js:60"
        },
        {
            "message": "Missing item type\nFunction to load a tab and its content in the fancybox\nalso changes the help button to show the correct help",
            "line": " VISH.Editor.Utils.js:336"
        },
        {
            "message": "Missing item type\nReturns a video object prepared to draw.\nSources: array of arrays [[source src, source type],...] .\nOptions: hash with additional data like poster url or autoplay\nparam area: optional param indicating the area to add the video, used for editing presentations\nparam style: optional param with the style, used in editing presentation",
            "line": " VISH.Editor.Video.HTML5.js:29"
        },
        {
            "message": "Missing item type\nfunction called when user clicks on template\nIncludes a new slide following the template selected",
            "line": " VISH.Editor.js:211"
        },
        {
            "message": "Missing item type\nFunction called when user clicks on an editable element\nEvent launched when an editable element belonging to the slide is clicked",
            "line": " VISH.Editor.js:266"
        },
        {
            "message": "Missing item type\nfunction called when user clicks on the delete icon of the zone",
            "line": " VISH.Editor.js:312"
        },
        {
            "message": "Missing item type\nFunction called when user delete a slide",
            "line": " VISH.Editor.js:344"
        },
        {
            "message": "Missing item type\nfunction called when user clicks on template zone with class selectable",
            "line": " VISH.Editor.js:383"
        },
        {
            "message": "Missing item type\nFunction called when user clicks on any element without class selectable",
            "line": " VISH.Editor.js:392"
        },
        {
            "message": "Missing item type\nFunction to add a delete button to the element",
            "line": " VISH.Editor.js:456"
        },
        {
            "message": "Missing item type\nFunction called when entering slide in editor, we have to show the objects",
            "line": " VISH.Editor.js:468"
        },
        {
            "message": "Missing item type\nFunction called when leaving slide in editor, we have to hide the objects",
            "line": " VISH.Editor.js:494"
        },
        {
            "message": "Missing item type\nFunction to save the presentation",
            "line": " VISH.Editor.js:519"
        },
        {
            "message": "Missing item type\nfunction to get the template of the slide of current_el\nparam area: optional param indicating the area to get the template, used for editing presentations",
            "line": " VISH.Editor.js:879"
        },
        {
            "message": "Missing item type\nfunction to add the events to the help buttons to launch joy ride bubbles",
            "line": " VISH.Events.js:139"
        },
        {
            "message": "Missing item type\nFunction to do the language translation",
            "line": " VISH.I18n.js:7"
        },
        {
            "message": "Missing item type\nFunction to translate a text",
            "line": " VISH.I18n.js:141"
        },
        {
            "message": "Missing item type\nReturn the current language",
            "line": " VISH.I18n.js:185"
        },
        {
            "message": "Missing item type\nFunction to reload a gifs in the slide for Mobile devices",
            "line": " VISH.ImagePlayer.js:3"
        },
        {
            "message": "Missing item type\nPatterns",
            "line": " VISH.Object.js:104"
        },
        {
            "message": "Missing item type\nFunction to add an object to the slide\nthe object is in the wrapper attribute of the div",
            "line": " VISH.ObjectPlayer.js:3"
        },
        {
            "message": "Missing item type\nFunction to initialize the presentation\nInitialize renderer and call it to render each slide",
            "line": " VISH.Presentation.js:4"
        },
        {
            "message": "Missing item type\nGET /quiz_sessions/X/results.json.",
            "line": " VISH.Quiz.API.js:148"
        },
        {
            "message": "Missing item type\nSend answers for real time quizzes\nPUT /quiz_sessions/X",
            "line": " VISH.Quiz.API.js:219"
        },
        {
            "message": "Missing item type\nFunction to render a quiz inside an article (a slide)",
            "line": " VISH.Quiz.js:88"
        },
        {
            "message": "Missing item type\nHelpers",
            "line": " VISH.QuizCharts.js:460"
        },
        {
            "message": "Missing item type\nFunction to initialize the Recommendations",
            "line": " VISH.Recommendations.js:24"
        },
        {
            "message": "Missing item type\nFunction to check if this is the appropiate moment to request the recommendations",
            "line": " VISH.Recommendations.js:98"
        },
        {
            "message": "Missing item type\nFunction to call ViSH via AJAX to get recommendation of excursions",
            "line": " VISH.Recommendations.js:116"
        },
        {
            "message": "Missing item type\nSCORM API\nThis is a content API, it self-establishes communication with the LMS in SCORM 2004 or 1.2.\nSwitch statements will convert some SCORM 2004 calls to SCORM 1.2, but you must understand there are limitations\non data storage between versions. Example: Suspend Data 64,000 vs 4096 or Bookmark(location) 1000 vs 255.\nDepending on your use, your content may not squeeze into the SCORM 1.2 available space.  Because of this, log messages\nwill be output so you can monitor your cmi \"set\" value length.  Ultimately, a LMS may block your request because of this.\nThis API is meant to simplify common SCORM Tasks, but also offers the ability to use it 'long hand'. Several other\npublic API's are available online, some free some charge, and this is a best effort to boil it all down.\nDocumentation, samples, resources, and credits: ADL, Claude Ostyn, Pipwerks, SCORM.com\nGoals: SCORM For Everyone else, low overhead, simple API's, containment, and transparency.\n\nTypical CMI Usage (if used by itself):\nvar scorm = new SCORM_API({debug: true, exit_type: 'suspend'}),\nlmsconnected = scorm.initialize();\nscorm.getvalue('cmi.location');\nscorm.setvalue('cmi.location', '4');\nscorm.commit();\nscorm.terminate();\n\nHTML Event Setup:\nIf you choose not to use SCOBot tips for onload and onunload, onbeforeunload events you may need to make init, exit methods to do other things\nvs. directly referencing the SCORM API here.  Feel free to make those methods if you need to.  'window.top' can be used because\nsome deployments self occur within a popup in a IFRAME will not fire properly on exit, in some Mozilla browsers.  Last checked, window worked with\nJQuery 1.7+ however.  If you have issues trapping the unload event, please try window.top.\n$(window).bind('load', YOUR_INITIALIZATION_METHOD);\n$(window).bind('unload', YOUR_EXIT_METHOD);\n\nJSLint was recently changed and its throwing a \"use spaces, not tabs\" error.  I decided to switch to spaces.\nhttps://github.com/douglascrockford/JSLint/pull/140\n\nhttps://github.com/cybercussion/SCOBot",
            "line": " VISH.SCORM.API.js:103"
        },
        {
            "message": "Missing item type\nDebug\nBuilt-In Debug Functionality to output to console (Firebug, Inspector, Dev Tool etc ...)",
            "line": " VISH.SCORM.API.js:200"
        },
        {
            "message": "Missing item type\nFind API\nAPI_1484_11 or API for SCORM 2004 or 1.2",
            "line": " VISH.SCORM.API.js:325"
        },
        {
            "message": "Missing item type\nCentiseconds To ISO Duration\nBorrowed from Claude Ostyn, but touched up for JSLint/JavaScript and evil \"with\" statement",
            "line": " VISH.SCORM.API.js:351"
        },
        {
            "message": "Missing item type\nISO Duration to Centisecond",
            "line": " VISH.SCORM.API.js:430"
        },
        {
            "message": "Missing item type\nPad Time\nPads time with proper formatting (double digits)",
            "line": " VISH.SCORM.API.js:500"
        },
        {
            "message": "Missing item type\nISO 8601 Date String UTC\nConverts date object into ISO 8601 standard\nreturns {String} ISO 8601 + UTC",
            "line": " VISH.SCORM.API.js:508"
        },
        {
            "message": "Missing item type\nISO 8601 Date String\nConcerts date into ISO 8601 Standard",
            "line": " VISH.SCORM.API.js:517"
        },
        {
            "message": "Missing item type\nISO 8601 String to Date\nNot extremely clear yet if this is needed at a SCO level.  If not I'll remove it later.",
            "line": " VISH.SCORM.API.js:528"
        },
        {
            "message": "Missing item type\nCentiseconds To SCORM 1.2 Duration\nBorrowed from Claude Ostyn, but touched up for JSLint/JavaScript and evil \"with\" statement",
            "line": " VISH.SCORM.API.js:573"
        },
        {
            "message": "Missing item type\nMake Boolean\nTurns 'yes', 'no', 'true', 'false', '0', '1' into true/false",
            "line": " VISH.SCORM.API.js:624"
        },
        {
            "message": "Missing item type\nTrigger Warning (internal to this API)\nThrows a console log when a SCORM API Error occurs",
            "line": " VISH.SCORM.API.js:653"
        },
        {
            "message": "Missing item type\nTrigger Exception",
            "line": " VISH.SCORM.API.js:663"
        },
        {
            "message": "Missing item type\nGet Last LMS Error Code\nError Code should be 0 if its anything else, a error has occurred",
            "line": " VISH.SCORM.API.js:673"
        },
        {
            "message": "Missing item type\nGet Last LMS Error Message\nError Message associated by error code",
            "line": " VISH.SCORM.API.js:698"
        },
        {
            "message": "Missing item type\nCommit (SCORM Call)\nCommits the Data to the Server via the LMS API.  SCORM Time done by default.",
            "line": " VISH.SCORM.API.js:1043"
        },
        {
            "message": "Missing item type\nInitialize  (SCORM Call)\nInitializes the SCO",
            "line": " VISH.SCORM.API.js:1081"
        },
        {
            "message": "Missing item type\nTerminate (SCORM Call)\nTerminates the SCO",
            "line": " VISH.SCORM.API.js:1138"
        },
        {
            "message": "Missing item type\nGet Objective By ID\nThis is fun, they make you go fish the objectives array integer by the ID.\nObjectives do not appear to be 'journaled' as object identifiers have to be unique.\nAs this method is seeking information it may trigger SCORM Errors on the LMS that hint that\nobjects haven't been defined yet.  This is perfectly normal.",
            "line": " VISH.SCORM.API.js:1182"
        },
        {
            "message": "Missing item type\nGet Interaction By ID\nThis is fun, they make you go fish the interactions array integer by the ID.\nI included this in the main SCORM API because this functionality should be stock.  You're\neither going to journal these (history) or treat them like states that you update.  You must decide that.",
            "line": " VISH.SCORM.API.js:1214"
        },
        {
            "message": "Missing item type\nGet interaction.n.objective By ID\nYou can have multiple objectives assigned to a interaction.",
            "line": " VISH.SCORM.API.js:1245"
        },
        {
            "message": "Missing item type\nGet interaction.n.correct_responses By pattern\nYou can have multiple correct responses assigned to a interaction.",
            "line": " VISH.SCORM.API.js:1272"
        },
        {
            "message": "Missing item type\nInit (Internal API)\nInitializes the SCORM API, and locates the LMS API",
            "line": " VISH.SCORM.API.js:1304"
        },
        {
            "message": "Missing item type\nGet Last Error (Internal API)\nConverts error integer to Message String",
            "line": " VISH.SCORM.API.js:1351"
        },
        {
            "message": "Missing item type\nIs LMS Connected\nWill tell you if LMS is truly connected or not.  You may be running locally.",
            "line": " VISH.SCORM.API.js:1361"
        },
        {
            "message": "Missing item type\nSet (Internal API)\nThis locally sets values local to this API",
            "line": " VISH.SCORM.API.js:1370"
        },
        {
            "message": "Missing item type\nGet (Internal API)\nThis locally gets values local to this API",
            "line": " VISH.SCORM.API.js:1402"
        },
        {
            "message": "Missing item type\nHook for External Plugins like Flash to set Time\nPublic to Private API's",
            "line": " VISH.SCORM.API.js:1417"
        },
        {
            "message": "Missing item type\nFunction to go to next slide",
            "line": " VISH.Slides.js:263"
        },
        {
            "message": "Missing item type\nFunction to go to previous slide",
            "line": " VISH.Slides.js:270"
        },
        {
            "message": "Missing item type\nFunction to move n slides and change the thumbnails and focus\nn > 0 (advance slides)\nn < 0 (go back)",
            "line": " VISH.Slides.js:277"
        },
        {
            "message": "Missing item type\nGo to the slide no",
            "line": " VISH.Slides.js:299"
        },
        {
            "message": "Missing item type\nGo to the last slide",
            "line": " VISH.Slides.js:343"
        },
        {
            "message": "Missing item type\nFunction to open a subslide",
            "line": " VISH.Slides.js:377"
        },
        {
            "message": "Missing item type\nFunction to close a subslide",
            "line": " VISH.Slides.js:406"
        },
        {
            "message": "Missing item type\nLoad web snapshots",
            "line": " VISH.SnapshotPlayer.js:3"
        },
        {
            "message": "Missing item type\nUnload websnapshots",
            "line": " VISH.SnapshotPlayer.js:29"
        },
        {
            "message": "Missing item type\nFunction to start a tutorial\ntipLocation can be 'top' or 'bottom' in relation to parent element",
            "line": " VISH.Tour.js:3"
        },
        {
            "message": "Missing item type\nFunction to dinamically add a css",
            "line": " VISH.Utils.Loader.js:159"
        },
        {
            "message": "Missing item type\nReturn a unic id.\nfull_id_prefix: Specify a prefix for the id, for example, article to get \"article_x\" ids.\nSpecify a separator for nested ids.\njustCheck: only check if the id is really unic, if not generate a new id.",
            "line": " VISH.Utils.js:135"
        },
        {
            "message": "Missing item type\nFix presentations with old JSON format\nTry to update them to current version\nReturn null if presentation is irretrievable",
            "line": " VISH.Utils.js:177"
        },
        {
            "message": "Missing item type\nCheck slide types and fix it",
            "line": " VISH.Utils.js:207"
        },
        {
            "message": "Missing item type\nFunction to get width in pixels from a style attribute.\nIf width attribute is given by percent, area (parent container) attribute is needed.",
            "line": " VISH.Utils.js:682"
        },
        {
            "message": "Missing item type\nFunction to get width in pixels from a style attribute.\nIf width attribute is given by percent, area (parent container) attribute is needed.",
            "line": " VISH.Utils.js:690"
        },
        {
            "message": "Missing item type\nFunction to get width and height in pixels from a style attribute.\nIf widht or height attribute is given by percent, area (parent container) attribute is needed to convert to pixels.",
            "line": " VISH.Utils.js:699"
        },
        {
            "message": "Missing item type\nFunction to play all videos and audios of a slide",
            "line": " VISH.Video.HTML5.js:130"
        },
        {
            "message": "Missing item type\nFunction to stop all videos and audios of a slide",
            "line": " VISH.Video.HTML5.js:151"
        },
        {
            "message": "Missing item type\nFunction to pause a specific video",
            "line": " VISH.Video.Youtube.js:243"
        },
        {
            "message": "Missing item type\nFunction to pause a specific video",
            "line": " VISH.Video.Youtube.js:270"
        },
        {
            "message": "Missing item type\nFunction to initialize the Viewer, saves the slides object and init the presentation with it\noptions is a hash with params and options from the server.",
            "line": " VISH.Viewer.js:9"
        },
        {
            "message": "Missing item type\nFunction called when entering slide in viewer, we have to show the objects",
            "line": " VISH.Viewer.js:122"
        },
        {
            "message": "Missing item type\nFunction called when leaving a slide in viewer",
            "line": " VISH.Viewer.js:179"
        },
        {
            "message": "Missing item type\nfunction to update the number that indicates what slide is diplayed\nwith this format: 1/12 2/12",
            "line": " VISH.Viewer.js:204"
        },
        {
            "message": "Missing item type\nFunction to hide/show the page-switchers buttons and arrows\nhide the left one if on first slide\nhide the right one if on last slide -> always show it, it will show the recommendations if on last slide\nshow both otherwise",
            "line": " VISH.ViewerAdapter.js:140"
        },
        {
            "message": "Missing item type\nFunction to adapt the slides to the screen size",
            "line": " VISH.ViewerAdapter.js:227"
        },
        {
            "message": "Missing item type\nFancybox resizing. If a fancybox is opened, resize it",
            "line": " VISH.ViewerAdapter.js:382"
        }
    ]
}