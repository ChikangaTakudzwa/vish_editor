{
    "project": {},
    "files": {
        "libs/ckeditor/lang/fa.js": {
            "name": "libs/ckeditor/lang/fa.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "libs/ckeditor/lang/ku.js": {
            "name": "libs/ckeditor/lang/ku.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "libs/ckeditor/plugins/autogrow/plugin.js": {
            "name": "libs/ckeditor/plugins/autogrow/plugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "libs/jquery.form.js": {
            "name": "libs/jquery.form.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.AppletPlayer.js": {
            "name": "VISH.AppletPlayer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.API.js": {
            "name": "VISH.Editor.API.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Dummies.js": {
            "name": "VISH.Editor.Dummies.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Events.js": {
            "name": "VISH.Editor.Events.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.I18n.js": {
            "name": "VISH.Editor.I18n.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Image.js": {
            "name": "VISH.Editor.Image.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.LRE.js": {
            "name": "VISH.Editor.LRE.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Object.Snapshot.js": {
            "name": "VISH.Editor.Object.Snapshot.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Object.js": {
            "name": "VISH.Editor.Object.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Presentation.js": {
            "name": "VISH.Editor.Presentation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Renderer.js": {
            "name": "VISH.Editor.Renderer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Settings.js": {
            "name": "VISH.Editor.Settings.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Slides.js": {
            "name": "VISH.Editor.Slides.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Text.js": {
            "name": "VISH.Editor.Text.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Thumbnails.js": {
            "name": "VISH.Editor.Thumbnails.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Tools.Menu.js": {
            "name": "VISH.Editor.Tools.Menu.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Utils.iso8601Parser.js": {
            "name": "VISH.Editor.Utils.iso8601Parser.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Utils.js": {
            "name": "VISH.Editor.Utils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.Video.HTML5.js": {
            "name": "VISH.Editor.Video.HTML5.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Editor.js": {
            "name": "VISH.Editor.js",
            "modules": {},
            "classes": {
                "VISH.Editor": 1
            },
            "fors": {},
            "namespaces": {
                "VISH": 1
            }
        },
        "VISH.Events.js": {
            "name": "VISH.Events.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.ImagePlayer.js": {
            "name": "VISH.ImagePlayer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Object.js": {
            "name": "VISH.Object.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.ObjectPlayer.js": {
            "name": "VISH.ObjectPlayer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Presentation.js": {
            "name": "VISH.Presentation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Quiz.API.js": {
            "name": "VISH.Quiz.API.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Quiz.js": {
            "name": "VISH.Quiz.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.QuizCharts.js": {
            "name": "VISH.QuizCharts.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Recommendations.js": {
            "name": "VISH.Recommendations.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Renderer.js": {
            "name": "VISH.Renderer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Slides.js": {
            "name": "VISH.Slides.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.SnapshotPlayer.js": {
            "name": "VISH.SnapshotPlayer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Tour.js": {
            "name": "VISH.Tour.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Utils.Loader.js": {
            "name": "VISH.Utils.Loader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Utils.js": {
            "name": "VISH.Utils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.VideoPlayer.HTML5.js": {
            "name": "VISH.VideoPlayer.HTML5.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.VideoPlayer.Youtube.js": {
            "name": "VISH.VideoPlayer.Youtube.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.Viewer.js": {
            "name": "VISH.Viewer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.ViewerAdapter.js": {
            "name": "VISH.ViewerAdapter.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "VISH.js": {
            "name": "VISH.js",
            "modules": {
                "ViSH": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "ViSH": {
            "name": "ViSH",
            "submodules": {},
            "classes": {
                "VISH.Editor": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "VISH.Editor.js",
            "line": 1,
            "description": "ViSH Editor & Viewer\nVish Editor is a HTML5 application to create web presentations in a simple and friendly way.\nhttp://github.com/ging/vish_editor"
        }
    },
    "classes": {
        "VISH.Editor": {
            "name": "VISH.Editor",
            "shortname": "VISH.Editor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ViSH",
            "namespace": "VISH",
            "file": "VISH.Editor.js",
            "line": 1,
            "description": "ViSH Editor"
        }
    },
    "classitems": [
        {
            "file": "libs/ckeditor/lang/fa.js",
            "line": 11,
            "fileoverview": "Defines the {@link CKEDITOR.lang} object for the\nPersian language.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/fa.js",
            "line": 16,
            "type": "String",
            "example": [
                ""
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/fa.js",
            "line": 21,
            "description": "Contains the dictionary of language entries.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/fa.js",
            "line": 27,
            "description": "The language reading direction. Possible values are \"rtl\" for\nRight-To-Left languages (like Arabic) and \"ltr\" for Left-To-Right\nlanguages (like English).",
            "default": "'ltr'",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/ku.js",
            "line": 11,
            "fileoverview": "",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/ku.js",
            "line": 15,
            "type": "String",
            "example": [
                ""
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/ku.js",
            "line": 20,
            "description": "Contains the dictionary of language entries.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/lang/ku.js",
            "line": 26,
            "description": "The language reading direction. Possible values are \"rtl\" for\nRight-To-Left languages (like Arabic) and \"ltr\" for Left-To-Right\nlanguages (like English).",
            "default": "'ltr'",
            "class": "VISH.Editor"
        },
        {
            "file": "AutoGrow plugin",
            "line": 6,
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/plugins/autogrow/plugin.js",
            "line": 83,
            "description": "The minimum height to which the editor can reach using AutoGrow.",
            "name": "CKEDITOR.config.autoGrow_minHeight",
            "type": "Number",
            "default": "200",
            "since": "3.4",
            "example": [
                "\nconfig.autoGrow_minHeight = 300;"
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/plugins/autogrow/plugin.js",
            "line": 93,
            "description": "The maximum height to which the editor can reach using AutoGrow. Zero means unlimited.",
            "name": "CKEDITOR.config.autoGrow_maxHeight",
            "type": "Number",
            "default": "0",
            "since": "3.4",
            "example": [
                "\nconfig.autoGrow_maxHeight = 400;"
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "libs/ckeditor/plugins/autogrow/plugin.js",
            "line": 103,
            "description": "Fired when the AutoGrow plugin is about to change the size of the editor.",
            "name": "",
            "itemtype": "event",
            "params": [
                {
                    "name": "data.currentHeight",
                    "description": "The current height of the editor (before the resizing).",
                    "type": "Number"
                },
                {
                    "name": "data.newHeight",
                    "description": "The new height of the editor (after the resizing). It can be changed\n                             to determine another height to be used instead.",
                    "type": "Number"
                }
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 53,
            "description": "Feature detection",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 60,
            "description": "ajaxSubmit() provides a mechanism for immediately submitting\nan HTML form using AJAX.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 664,
            "description": "ajaxForm() provides a mechanism for fully automating form submission.\n\nThe advantages of using this method instead of ajaxSubmit() are:\n\n1: This method will include coordinates for <input type=\"image\" /> elements (if the element\n   is used to submit the form).\n2. This method will include the submit element's name/value data (for the element that was\n   used to submit the form).\n3. This method binds the submit() method to the form for you.\n\nThe options argument for ajaxForm works exactly as it does for ajaxSubmit.  ajaxForm merely\npasses the options argument along after properly binding events for submit elements and\nthe form itself.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 759,
            "description": "formToArray() gathers form element data into an array of objects that can\nbe passed to any of the following ajax functions: $.get, $.post, or load.\nEach object in the array has both a 'name' and 'value' property.  An example of\nan array for a simple login form might be:\n\n[ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]\n\nIt is this array that is passed to pre-submit callback functions provided to the\najaxSubmit() and ajaxForm() methods.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 840,
            "description": "Serializes form data into a 'submittable' string. This method will return a string\nin the format: name1=value1&amp;name2=value2",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 849,
            "description": "Serializes all field elements in the jQuery object into a query string.\nThis method will return a string in the format: name1=value1&amp;name2=value2",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 874,
            "description": "Returns the value(s) of the element in the matched set.  For example, consider the following form:\n\n <form><fieldset>\n     <input name=\"A\" type=\"text\" />\n     <input name=\"A\" type=\"text\" />\n     <input name=\"B\" type=\"checkbox\" value=\"B1\" />\n     <input name=\"B\" type=\"checkbox\" value=\"B2\"/>\n     <input name=\"C\" type=\"radio\" value=\"C1\" />\n     <input name=\"C\" type=\"radio\" value=\"C2\" />\n </fieldset></form>\n\n var v = $(':text').fieldValue();\n // if no values are entered into the text inputs\n v == ['','']\n // if values entered into the text inputs are 'foo' and 'bar'\n v == ['foo','bar']\n\n var v = $(':checkbox').fieldValue();\n // if neither checkbox is checked\n v === undefined\n // if both checkboxes are checked\n v == ['B1', 'B2']\n\n var v = $(':radio').fieldValue();\n // if neither radio is checked\n v === undefined\n // if first radio is checked\n v == ['C1']\n\nThe successful argument controls whether or not the field element must be 'successful'\n(per http://www.w3.org/TR/html4/interact/forms.html#successful-controls).\nThe default value of the successful argument is true.  If this value is false the value(s)\nfor each element is returned.\n\nNote: This method *always* returns an array.  If no valid value can be determined the\n   array will be empty, otherwise it will contain one or more values.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 927,
            "description": "Returns the value of the field element.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 969,
            "description": "Clears the form data.  Takes the following actions on the form's input fields:\n - input text fields will have their 'value' property set to the empty string\n - select elements will have their 'selectedIndex' property set to -1\n - checkbox and radio inputs will have their 'checked' property set to false\n - inputs of type submit, button, reset, and hidden will *not* be effected\n - button elements will *not* be effected",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 983,
            "description": "Clears the selected form elements.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 1011,
            "description": "Resets the form data.  Causes all form elements to be reset to their original value.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 1024,
            "description": "Enables or disables any matching elements.",
            "class": "VISH.Editor"
        },
        {
            "file": "libs/jquery.form.js",
            "line": 1036,
            "description": "Checks/unchecks any matching checkboxes or radio buttons and\nselects/deselects and matching option elements.",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.AppletPlayer.js",
            "line": 3,
            "description": "Function to add an applet element to the slide\nthe applet is inside the archive, width, height and params attributes of the div",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.AppletPlayer.js",
            "line": 15,
            "description": "Function to remove the applets of the presentation",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 1,
            "description": "Provide an API with ViSH (Virtual Science Hub)",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 9,
            "description": "Request IMAGES in json format\nThe request is: GET /search.json?type=picture&q=text",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 44,
            "description": "function to call VISH and request recommended images",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 63,
            "description": "Request VIDEOS in json format\nThe request is: GET /search.json?type=video&q=text",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 99,
            "description": "function to call VISH and request recommended videos",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 117,
            "description": "Request OBJECTS in json format\nThe request is: GET /search.json?object=1&q=text",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 152,
            "description": "function to call VISH and request recommended objects",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 170,
            "description": "function to call VISH and request live objects in json format\nThe request is:\nGET /search.json?live=1&q=",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 207,
            "description": "function to call VISH and request recommended lives objects",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 225,
            "description": "function to call VISH and request excursions in json format\nThe request is:\nGET /excursions/search.json?type=&q=text",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 262,
            "description": "function to call VISH and request recommended excursions",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 280,
            "description": "function to call VISH and request smartcards (flashcards and virtual tours) in json format\nThe request is:\nGET /excursions/search.json?type=smartcard&q=text",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 299,
            "description": "function to call VISH and request recommended smartcards",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 317,
            "description": "generic function to call VISH and request by query and type\nThe request is:\nGET /search.json?type=type&q=query",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 351,
            "description": "Specific function to call VISH and request lives\nThe request is:\nGET /resources/search.json?live=1&q=",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 376,
            "description": "Specific function to call VISH and request excursions\nThe request is:\nGET /excursions/search.json?type=&q=query",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 404,
            "description": "Function to call VISH and request tags",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.API.js",
            "line": 442,
            "description": "Function to get the available avatars from the server, they should be at /excursion_thumbnails.json",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Dummies.js",
            "line": 92,
            "description": "Function to replace dummy ids",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Events.js",
            "line": 207,
            "description": "Tutorial\nFunction to add the events to the help buttons to launch joy ride bubbles",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.I18n.js",
            "line": 7,
            "description": "Function to do the language translation\nIf this function is called there should be defined an i18n array with the translations",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.I18n.js",
            "line": 149,
            "description": "Function to translate a text",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Image.js",
            "line": 184,
            "description": "Function to draw an image in a zone of the template\nthe zone to draw is the one in current_area\nthis function also makes the image draggable\nparam area: optional param indicating the area to add the image, used for editing presentations\nparam style: optional param with the style, used in editing presentation",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 26,
            "description": "function to call to LRE and request images\nsuccessCallback: function to pass the results if everything goes well.\nfailCallback: function to pass the error if something fails. Format: {\"error\":\"cnf cannot be null!\"}",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 47,
            "description": "function to call to LRE and request objects (webs, etc.)\nsuccessCallback: function to pass the results if everything goes well.\nfailCallback: function to pass the error if something fails. Format: {\"error\":\"cnf cannot be null!\"}",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 57,
            "description": "Generic function to call LRE and request for content with some params\nVISH acts as a proxy, so this method sends it the query and the number of objects to receive\nVISH will call the LRE server and will take the returned ids and will ask for them\n     returning the array with the metadata for the results, so this client do not need to do two requests\nlimit: number of items to return\nresponse_type: the type of array that we want as response (it can be \"image\" or \"object\")\nsuccessCallback: function to pass the results if everything goes well\nfailCallback: function to pass the error if something fails. Format: {\"error\":\"cnf cannot be null!\"}\nThe request is:\nGET /lre/search?q=query&limit=10",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 88,
            "description": "generic function to compose a valid query to send to the LRE\nexplanations of params:\n\nterms: array of terms to be searched. Example [\"biology\", \"nature\"] -> search in LRE content containing \"biology\" AND \"nature\"\nlrt: array of learning resource types. See the LRE Metadata Application Profile at page 35 of http://lreforschools.eun.org/c/document_library/get_file?\n\t\tp_l_id=10970&folderId=12073&name=DLFE-1.pdf (i.e: audio, data, image, text, video)\n     if not specified we request for all lrt\nlanguage: language of the learning object searched as ISO639-1 code -> example: en, es, pt\nNOT USED MAXAGE AND MINAGE BECAUSE LRE RETURNED NO RESULTS:",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 120,
            "description": "function to change the metadata returned by the \nLRE to a simple format similar to the one that we use in VISH repository\nThis method is public so I can call it from command line to test it with \nV.Editor.LRE.formatLREResponse(VISH.Samples.API.LREImageList)\nIMPORTANT: THIS METHOD REMOVES FROM THE ARRAY THE \"PROVIDERS_TO_REMOVE\" PROVIDERS",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 152,
            "description": "Function to format one element from LRE to our format\nif type is \"image\" returns null if not a raw image (sometimes it is a website or other thing)\nThe final format is for \"image\": \n\t  \t{\n\t  \t\t\"id\":54,\n\t\t\t\"title\":\"ClintEastwood.jpg\",\n\t\t\t\"description\":null,\n\t\t\t\"author\":\"Demo\",\n\t\t\t\"src\":\"http://www.dan-dare.org/dan%20simpsons/TheSimpsonsEveryoneEver800.jpg\"\n\t\t}\n\t\tand for \"object\":\n\t\t{\n\t      'id'     : '1534',\n\t      'title'         :  'Game Strauss',\n\t      'description'   :  'Fichero PDF',\n\t      'author'        :  'Conspirazzi',\n\t      'object'        :  'http://www.conspirazzi.com/e-books/game-strauss.pdf',\n\t      'thumbnail'\t  : 'http://lrethumbnails.eun.org/995/445995.png'\n\t    }",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 214,
            "description": "function to get the SRC from the my_element",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 241,
            "description": "function to check if a returned image element has any manifestation as webBrowser",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.LRE.js",
            "line": 263,
            "description": "function to get title and description in your lang or in english if not your lang present",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Object.Snapshot.js",
            "line": 76,
            "description": "Param style: optional param with the style, used in editing presentation",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Object.js",
            "line": 350,
            "description": "Returns a object prepared to draw.\nparam options.area: optional param indicating the area to add the object, used for editing presentations\nparam options.style: optional param with the style, used in editing presentation",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Object.js",
            "line": 431,
            "description": "param style: optional param with the style, used in editing presentation",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Presentation.js",
            "line": 31,
            "description": "Insert the selected slides of a slide presentation in JSON",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Renderer.js",
            "line": 5,
            "description": "Function to initialize the renderer",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Renderer.js",
            "line": 40,
            "description": "function to render one slide in editor",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Renderer.js",
            "line": 110,
            "description": "Function to render slidesets",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Settings.js",
            "line": 367,
            "description": "function called when the user clicks on the save button\nin the initial presentation details fancybox to save\nthe data in order to be stored at the end in the JSON file",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Settings.js",
            "line": 517,
            "description": "function called when the user clicks on the pedagogical options button",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Settings.js",
            "line": 526,
            "description": "function called when the user clicks on the done button in the pedagogical options panel",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Slides.js",
            "line": 11,
            "description": "function to know if the slides have the focus or not\nUse to disable actions (like keyboard shortcuts) when the slide is not focused",
            "return": {
                "description": "false if other element has the focus"
            },
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Text.js",
            "line": 60,
            "description": "Function called when user clicks on the text thumb\nAllows users to include text content in the slide using a WYSIWYG editor\nparam area: optional param indicating the area to add the wysiwyg, used for editing presentations",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Thumbnails.js",
            "line": 140,
            "description": "Function to select the thumbnail",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Tools.Menu.js",
            "line": 72,
            "description": "function called when user clicks on save\nGenerates the json for the current slides\ncovers the section element and every article inside\nfinally calls V.Viewer with the generated json",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Utils.iso8601Parser.js",
            "line": 50,
            "description": "Parses a ISO8601 period string.",
            "params": [
                {
                    "name": "period",
                    "description": "iso8601 period string"
                },
                {
                    "name": "_distributeOverflow",
                    "description": "if 'true', the unit overflows are merge into the next higher units."
                }
            ],
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Utils.js",
            "line": 82,
            "description": "function to get the styles in percentages",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Utils.js",
            "line": 432,
            "description": "Function to load a tab and its content in the fancybox\nalso changes the help button to show the correct help",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.Video.HTML5.js",
            "line": 15,
            "description": "Returns a video object prepared to draw.\nSources: array of arrays [[source src, source type],...] .\nOptions: hash with additional data like poster url or autoplay\nparam area: optional param indicating the area to add the video, used for editing presentations\nparam style: optional param with the style, used in editing presentation",
            "class": "VISH.Editor"
        },
        {
            "file": "VISH.Editor.js",
            "line": 31,
            "description": "VISH Editor initializer.\nAdds the listeners to the click events in the different images and buttons of the UI.\nCall submodule initializers.",
            "params": [
                {
                    "name": "options",
                    "description": "Hash with params and options received from the server.",
                    "type": "HashTable"
                },
                {
                    "name": "presentation",
                    "description": "Presentation to edit (if not present, a new presentation is created).",
                    "type": "JSONObject"
                }
            ],
            "itemtype": "method",
            "name": "init",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 172,
            "description": "function called when user clicks on template\nIncludes a new slide following the template selected",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 216,
            "description": "Function called when user clicks on an editable element\nEvent launched when an editable element belonging to the slide is clicked",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 313,
            "description": "function called when user clicks on the delete icon of the zone",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 344,
            "description": "Function called when user delete a slide",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 375,
            "description": "function called when user clicks on template zone with class selectable",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 384,
            "description": "Function called when user clicks on any element without class selectable",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 444,
            "description": "Function to add a delete button to the element",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 456,
            "description": "Function called when entering slide in editor, we have to show the objects",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 480,
            "description": "Function called when leaving slide in editor, we have to hide the objects",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 505,
            "description": "Function to save the presentation",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Editor.js",
            "line": 763,
            "description": "function to get the template of the slide of current_el\nparam area: optional param indicating the area to get the template, used for editing presentations",
            "class": "VISH.Editor",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Events.js",
            "line": 104,
            "description": "function to add the events to the help buttons to launch joy ride bubbles",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Events.js",
            "line": 181,
            "description": "Function called when a poi is clicked\n'event' can be a delegate click event or a number",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.ImagePlayer.js",
            "line": 3,
            "description": "Function to reload a gifs in the slide for Mobile devices",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Object.js",
            "line": 65,
            "description": "Patterns",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.ObjectPlayer.js",
            "line": 3,
            "description": "Function to add an object to the slide\nthe object is in the wrapper attribute of the div",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.ObjectPlayer.js",
            "line": 26,
            "description": "Function to remove the flash objects from the slides",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Presentation.js",
            "line": 4,
            "description": "Function to initialize the presentation\nInitialize renderer and call it to render each slide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Presentation.js",
            "line": 19,
            "description": "Private function called when we have finished rendering the slides",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Quiz.API.js",
            "line": 47,
            "description": "Send answers for real time quizzes\nPUT /quiz_sessions/X",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Quiz.API.js",
            "line": 88,
            "description": "GET /quiz_sessions/X/results.json.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Quiz.js",
            "line": 241,
            "description": "Function to render a quiz inside an article (a slide)",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.QuizCharts.js",
            "line": 160,
            "description": "Helpers",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Recommendations.js",
            "line": 9,
            "description": "Function to initialize the Recommendations",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Recommendations.js",
            "line": 47,
            "description": "function to call ViSH via AJAX to get recommendation of excursions",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Renderer.js",
            "line": 6,
            "description": "Function to initialize the renderer\nOnly gets the section element from the html page",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Renderer.js",
            "line": 15,
            "description": "slides.html only have a section element and in this function we add an article element\nwith the proper content for the slide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Renderer.js",
            "line": 136,
            "description": "Function to render text inside an article (a slide)",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Renderer.js",
            "line": 143,
            "description": "Function to render empty inside an article (a slide)",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Renderer.js",
            "line": 150,
            "description": "Function to render an image inside an article (a slide)",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Renderer.js",
            "line": 174,
            "description": "Function to render a video inside an article (a slide)",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Renderer.js",
            "line": 208,
            "description": "Function to render an object inside an article (a slide)",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Renderer.js",
            "line": 234,
            "description": "Function to render an snapshot inside an article (a slide)",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Renderer.js",
            "line": 245,
            "description": "Function to render an applet inside an article (a slide)\nthe applet object and its params are not really inside the article but in the archive attribute, width, height and params of the div\nwhen entering a slide with an applet class we call V.AppletPlayer.loadSWF",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Renderer.js",
            "line": 254,
            "description": "Function to render a flashcard inside an article (a slide)\nwe only add canvas inside the div element\nthe flashcard will be drawn inside the canvas element",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 225,
            "description": "Function to go to next slide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 232,
            "description": "Function to go to previous slide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 239,
            "description": "Function to move n slides and change the thumbnails and focus\nn > 0 (advance slides)\nn < 0 (go back)",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 256,
            "description": "Go to the slide no",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 305,
            "description": "Go to the last slide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 313,
            "description": "Function to open a subslide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Slides.js",
            "line": 337,
            "description": "Function to close a subslide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SnapshotPlayer.js",
            "line": 3,
            "description": "Load web snapshots",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.SnapshotPlayer.js",
            "line": 29,
            "description": "Unload websnapshots",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Tour.js",
            "line": 3,
            "description": "function to start a walkme tour witht he help \"ol\" id given\ntipLocation can be 'top' or 'bottom' in relation to parent element",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.Loader.js",
            "line": 147,
            "description": "Function to dinamically add a css",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.js",
            "line": 34,
            "description": "Return a unic id.\nfull_id_prefix: Specify a prefix for the id, for example, article to get \"article_x\" ids.\nSpecify a separator for nested ids.\njustCheck: only check if the id is really unic, if not generate a new id.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.js",
            "line": 76,
            "description": "Fix presentations with old JSON format\nTry to update them to current version\nReturn null if presentation is irretrievable",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.js",
            "line": 106,
            "description": "Check slide types and fix it",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.js",
            "line": 533,
            "description": "Function to get width in pixels from a style attribute.\nIf width attribute is given by percent, area (parent container) attribute is needed.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.js",
            "line": 541,
            "description": "Function to get width in pixels from a style attribute.\nIf width attribute is given by percent, area (parent container) attribute is needed.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Utils.js",
            "line": 550,
            "description": "Function to get width and height in pixels from a style attribute.\nIf widht or height attribute is given by percent, area (parent container) attribute is needed to convert to pixels.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.VideoPlayer.HTML5.js",
            "line": 69,
            "description": "Function to start all videos of a slide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.VideoPlayer.HTML5.js",
            "line": 92,
            "description": "Function to stop all videos of a slide",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.VideoPlayer.HTML5.js",
            "line": 106,
            "description": "Function to start a specific video",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.VideoPlayer.HTML5.js",
            "line": 122,
            "description": "Function to pause a specific video",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.VideoPlayer.HTML5.js",
            "line": 138,
            "description": "Function to seek a specific video",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.VideoPlayer.Youtube.js",
            "line": 146,
            "description": "Function to pause a specific video",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.VideoPlayer.Youtube.js",
            "line": 173,
            "description": "Function to pause a specific video",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Viewer.js",
            "line": 9,
            "description": "Function to initialize the Viewer, saves the slides object and init the presentation with it\noptions is a hash with params and options from the server.",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Viewer.js",
            "line": 86,
            "description": "Function to enter and exit fullscreen",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Viewer.js",
            "line": 126,
            "description": "Function called when entering slide in viewer, we have to show the objects",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Viewer.js",
            "line": 171,
            "description": "Function called when leaving a slide in viewer",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Viewer.js",
            "line": 196,
            "description": "function to check if this is the penultimate Slide (or the only one) and call to get the recommendations",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.Viewer.js",
            "line": 211,
            "description": "function to update the number that indicates what slide is diplayed\nwith this format: 1/12 2/12",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.ViewerAdapter.js",
            "line": 195,
            "description": "Function to hide/show the page-switchers buttons\nhide the left one if on first slide\nhide the right one if on last slide -> always show it, it will show the recommendations if on last slide\nshow both otherwise",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.ViewerAdapter.js",
            "line": 268,
            "description": "Function to adapt the slides to the screen size, in case the editor is shown in another iframe\nparam \"fullscreen\" indicates that the call comes from a fullscreen button",
            "class": "",
            "namespace": "VISH"
        },
        {
            "file": "VISH.ViewerAdapter.js",
            "line": 352,
            "description": "Fancybox resizing",
            "class": "",
            "namespace": "VISH"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: fileoverview",
            "line": " libs/ckeditor/lang/fa.js:11"
        },
        {
            "message": "unknown tag: fileoverview",
            "line": " libs/ckeditor/lang/ku.js:11"
        },
        {
            "message": "unknown tag: name",
            "line": " libs/ckeditor/plugins/autogrow/plugin.js:83"
        },
        {
            "message": "unknown tag: name",
            "line": " libs/ckeditor/plugins/autogrow/plugin.js:93"
        },
        {
            "message": "unknown tag: name",
            "line": " libs/ckeditor/plugins/autogrow/plugin.js:103"
        },
        {
            "message": "Missing item type",
            "line": " libs/ckeditor/lang/fa.js:11"
        },
        {
            "message": "Missing item type",
            "line": " libs/ckeditor/lang/fa.js:16"
        },
        {
            "message": "Missing item type\nContains the dictionary of language entries.",
            "line": " libs/ckeditor/lang/fa.js:21"
        },
        {
            "message": "Missing item type\nThe language reading direction. Possible values are \"rtl\" for\nRight-To-Left languages (like Arabic) and \"ltr\" for Left-To-Right\nlanguages (like English).",
            "line": " libs/ckeditor/lang/fa.js:27"
        },
        {
            "message": "Missing item type",
            "line": " libs/ckeditor/lang/ku.js:11"
        },
        {
            "message": "Missing item type",
            "line": " libs/ckeditor/lang/ku.js:15"
        },
        {
            "message": "Missing item type\nContains the dictionary of language entries.",
            "line": " libs/ckeditor/lang/ku.js:20"
        },
        {
            "message": "Missing item type\nThe language reading direction. Possible values are \"rtl\" for\nRight-To-Left languages (like Arabic) and \"ltr\" for Left-To-Right\nlanguages (like English).",
            "line": " libs/ckeditor/lang/ku.js:26"
        },
        {
            "message": "Missing item type",
            "line": " AutoGrow plugin:6"
        },
        {
            "message": "Missing item type\nThe minimum height to which the editor can reach using AutoGrow.",
            "line": " libs/ckeditor/plugins/autogrow/plugin.js:83"
        },
        {
            "message": "Missing item type\nThe maximum height to which the editor can reach using AutoGrow. Zero means unlimited.",
            "line": " libs/ckeditor/plugins/autogrow/plugin.js:93"
        },
        {
            "message": "Missing item type\nFeature detection",
            "line": " libs/jquery.form.js:53"
        },
        {
            "message": "Missing item type\najaxSubmit() provides a mechanism for immediately submitting\nan HTML form using AJAX.",
            "line": " libs/jquery.form.js:60"
        },
        {
            "message": "Missing item type\najaxForm() provides a mechanism for fully automating form submission.\n\nThe advantages of using this method instead of ajaxSubmit() are:\n\n1: This method will include coordinates for <input type=\"image\" /> elements (if the element\n   is used to submit the form).\n2. This method will include the submit element's name/value data (for the element that was\n   used to submit the form).\n3. This method binds the submit() method to the form for you.\n\nThe options argument for ajaxForm works exactly as it does for ajaxSubmit.  ajaxForm merely\npasses the options argument along after properly binding events for submit elements and\nthe form itself.",
            "line": " libs/jquery.form.js:664"
        },
        {
            "message": "Missing item type\nformToArray() gathers form element data into an array of objects that can\nbe passed to any of the following ajax functions: $.get, $.post, or load.\nEach object in the array has both a 'name' and 'value' property.  An example of\nan array for a simple login form might be:\n\n[ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]\n\nIt is this array that is passed to pre-submit callback functions provided to the\najaxSubmit() and ajaxForm() methods.",
            "line": " libs/jquery.form.js:759"
        },
        {
            "message": "Missing item type\nSerializes form data into a 'submittable' string. This method will return a string\nin the format: name1=value1&amp;name2=value2",
            "line": " libs/jquery.form.js:840"
        },
        {
            "message": "Missing item type\nSerializes all field elements in the jQuery object into a query string.\nThis method will return a string in the format: name1=value1&amp;name2=value2",
            "line": " libs/jquery.form.js:849"
        },
        {
            "message": "Missing item type\nReturns the value(s) of the element in the matched set.  For example, consider the following form:\n\n <form><fieldset>\n     <input name=\"A\" type=\"text\" />\n     <input name=\"A\" type=\"text\" />\n     <input name=\"B\" type=\"checkbox\" value=\"B1\" />\n     <input name=\"B\" type=\"checkbox\" value=\"B2\"/>\n     <input name=\"C\" type=\"radio\" value=\"C1\" />\n     <input name=\"C\" type=\"radio\" value=\"C2\" />\n </fieldset></form>\n\n var v = $(':text').fieldValue();\n // if no values are entered into the text inputs\n v == ['','']\n // if values entered into the text inputs are 'foo' and 'bar'\n v == ['foo','bar']\n\n var v = $(':checkbox').fieldValue();\n // if neither checkbox is checked\n v === undefined\n // if both checkboxes are checked\n v == ['B1', 'B2']\n\n var v = $(':radio').fieldValue();\n // if neither radio is checked\n v === undefined\n // if first radio is checked\n v == ['C1']\n\nThe successful argument controls whether or not the field element must be 'successful'\n(per http://www.w3.org/TR/html4/interact/forms.html#successful-controls).\nThe default value of the successful argument is true.  If this value is false the value(s)\nfor each element is returned.\n\nNote: This method *always* returns an array.  If no valid value can be determined the\n   array will be empty, otherwise it will contain one or more values.",
            "line": " libs/jquery.form.js:874"
        },
        {
            "message": "Missing item type\nReturns the value of the field element.",
            "line": " libs/jquery.form.js:927"
        },
        {
            "message": "Missing item type\nClears the form data.  Takes the following actions on the form's input fields:\n - input text fields will have their 'value' property set to the empty string\n - select elements will have their 'selectedIndex' property set to -1\n - checkbox and radio inputs will have their 'checked' property set to false\n - inputs of type submit, button, reset, and hidden will *not* be effected\n - button elements will *not* be effected",
            "line": " libs/jquery.form.js:969"
        },
        {
            "message": "Missing item type\nClears the selected form elements.",
            "line": " libs/jquery.form.js:983"
        },
        {
            "message": "Missing item type\nResets the form data.  Causes all form elements to be reset to their original value.",
            "line": " libs/jquery.form.js:1011"
        },
        {
            "message": "Missing item type\nEnables or disables any matching elements.",
            "line": " libs/jquery.form.js:1024"
        },
        {
            "message": "Missing item type\nChecks/unchecks any matching checkboxes or radio buttons and\nselects/deselects and matching option elements.",
            "line": " libs/jquery.form.js:1036"
        },
        {
            "message": "Missing item type\nFunction to add an applet element to the slide\nthe applet is inside the archive, width, height and params attributes of the div",
            "line": " VISH.AppletPlayer.js:3"
        },
        {
            "message": "Missing item type\nFunction to remove the applets of the presentation",
            "line": " VISH.AppletPlayer.js:15"
        },
        {
            "message": "Missing item type\nProvide an API with ViSH (Virtual Science Hub)",
            "line": " VISH.Editor.API.js:1"
        },
        {
            "message": "Missing item type\nRequest IMAGES in json format\nThe request is: GET /search.json?type=picture&q=text",
            "line": " VISH.Editor.API.js:9"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request recommended images",
            "line": " VISH.Editor.API.js:44"
        },
        {
            "message": "Missing item type\nRequest VIDEOS in json format\nThe request is: GET /search.json?type=video&q=text",
            "line": " VISH.Editor.API.js:63"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request recommended videos",
            "line": " VISH.Editor.API.js:99"
        },
        {
            "message": "Missing item type\nRequest OBJECTS in json format\nThe request is: GET /search.json?object=1&q=text",
            "line": " VISH.Editor.API.js:117"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request recommended objects",
            "line": " VISH.Editor.API.js:152"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request live objects in json format\nThe request is:\nGET /search.json?live=1&q=",
            "line": " VISH.Editor.API.js:170"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request recommended lives objects",
            "line": " VISH.Editor.API.js:207"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request excursions in json format\nThe request is:\nGET /excursions/search.json?type=&q=text",
            "line": " VISH.Editor.API.js:225"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request recommended excursions",
            "line": " VISH.Editor.API.js:262"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request smartcards (flashcards and virtual tours) in json format\nThe request is:\nGET /excursions/search.json?type=smartcard&q=text",
            "line": " VISH.Editor.API.js:280"
        },
        {
            "message": "Missing item type\nfunction to call VISH and request recommended smartcards",
            "line": " VISH.Editor.API.js:299"
        },
        {
            "message": "Missing item type\ngeneric function to call VISH and request by query and type\nThe request is:\nGET /search.json?type=type&q=query",
            "line": " VISH.Editor.API.js:317"
        },
        {
            "message": "Missing item type\nSpecific function to call VISH and request lives\nThe request is:\nGET /resources/search.json?live=1&q=",
            "line": " VISH.Editor.API.js:351"
        },
        {
            "message": "Missing item type\nSpecific function to call VISH and request excursions\nThe request is:\nGET /excursions/search.json?type=&q=query",
            "line": " VISH.Editor.API.js:376"
        },
        {
            "message": "Missing item type\nFunction to call VISH and request tags",
            "line": " VISH.Editor.API.js:404"
        },
        {
            "message": "Missing item type\nFunction to get the available avatars from the server, they should be at /excursion_thumbnails.json",
            "line": " VISH.Editor.API.js:442"
        },
        {
            "message": "Missing item type\nFunction to replace dummy ids",
            "line": " VISH.Editor.Dummies.js:92"
        },
        {
            "message": "Missing item type\nTutorial\nFunction to add the events to the help buttons to launch joy ride bubbles",
            "line": " VISH.Editor.Events.js:207"
        },
        {
            "message": "Missing item type\nFunction to do the language translation\nIf this function is called there should be defined an i18n array with the translations",
            "line": " VISH.Editor.I18n.js:7"
        },
        {
            "message": "Missing item type\nFunction to translate a text",
            "line": " VISH.Editor.I18n.js:149"
        },
        {
            "message": "Missing item type\nFunction to draw an image in a zone of the template\nthe zone to draw is the one in current_area\nthis function also makes the image draggable\nparam area: optional param indicating the area to add the image, used for editing presentations\nparam style: optional param with the style, used in editing presentation",
            "line": " VISH.Editor.Image.js:184"
        },
        {
            "message": "Missing item type\nfunction to call to LRE and request images\nsuccessCallback: function to pass the results if everything goes well.\nfailCallback: function to pass the error if something fails. Format: {\"error\":\"cnf cannot be null!\"}",
            "line": " VISH.Editor.LRE.js:26"
        },
        {
            "message": "Missing item type\nfunction to call to LRE and request objects (webs, etc.)\nsuccessCallback: function to pass the results if everything goes well.\nfailCallback: function to pass the error if something fails. Format: {\"error\":\"cnf cannot be null!\"}",
            "line": " VISH.Editor.LRE.js:47"
        },
        {
            "message": "Missing item type\nGeneric function to call LRE and request for content with some params\nVISH acts as a proxy, so this method sends it the query and the number of objects to receive\nVISH will call the LRE server and will take the returned ids and will ask for them\n     returning the array with the metadata for the results, so this client do not need to do two requests\nlimit: number of items to return\nresponse_type: the type of array that we want as response (it can be \"image\" or \"object\")\nsuccessCallback: function to pass the results if everything goes well\nfailCallback: function to pass the error if something fails. Format: {\"error\":\"cnf cannot be null!\"}\nThe request is:\nGET /lre/search?q=query&limit=10",
            "line": " VISH.Editor.LRE.js:57"
        },
        {
            "message": "Missing item type\ngeneric function to compose a valid query to send to the LRE\nexplanations of params:\n\nterms: array of terms to be searched. Example [\"biology\", \"nature\"] -> search in LRE content containing \"biology\" AND \"nature\"\nlrt: array of learning resource types. See the LRE Metadata Application Profile at page 35 of http://lreforschools.eun.org/c/document_library/get_file?\n\t\tp_l_id=10970&folderId=12073&name=DLFE-1.pdf (i.e: audio, data, image, text, video)\n     if not specified we request for all lrt\nlanguage: language of the learning object searched as ISO639-1 code -> example: en, es, pt\nNOT USED MAXAGE AND MINAGE BECAUSE LRE RETURNED NO RESULTS:",
            "line": " VISH.Editor.LRE.js:88"
        },
        {
            "message": "Missing item type\nfunction to change the metadata returned by the \nLRE to a simple format similar to the one that we use in VISH repository\nThis method is public so I can call it from command line to test it with \nV.Editor.LRE.formatLREResponse(VISH.Samples.API.LREImageList)\nIMPORTANT: THIS METHOD REMOVES FROM THE ARRAY THE \"PROVIDERS_TO_REMOVE\" PROVIDERS",
            "line": " VISH.Editor.LRE.js:120"
        },
        {
            "message": "Missing item type\nFunction to format one element from LRE to our format\nif type is \"image\" returns null if not a raw image (sometimes it is a website or other thing)\nThe final format is for \"image\": \n\t  \t{\n\t  \t\t\"id\":54,\n\t\t\t\"title\":\"ClintEastwood.jpg\",\n\t\t\t\"description\":null,\n\t\t\t\"author\":\"Demo\",\n\t\t\t\"src\":\"http://www.dan-dare.org/dan%20simpsons/TheSimpsonsEveryoneEver800.jpg\"\n\t\t}\n\t\tand for \"object\":\n\t\t{\n\t      'id'     : '1534',\n\t      'title'         :  'Game Strauss',\n\t      'description'   :  'Fichero PDF',\n\t      'author'        :  'Conspirazzi',\n\t      'object'        :  'http://www.conspirazzi.com/e-books/game-strauss.pdf',\n\t      'thumbnail'\t  : 'http://lrethumbnails.eun.org/995/445995.png'\n\t    }",
            "line": " VISH.Editor.LRE.js:152"
        },
        {
            "message": "Missing item type\nfunction to get the SRC from the my_element",
            "line": " VISH.Editor.LRE.js:214"
        },
        {
            "message": "Missing item type\nfunction to check if a returned image element has any manifestation as webBrowser",
            "line": " VISH.Editor.LRE.js:241"
        },
        {
            "message": "Missing item type\nfunction to get title and description in your lang or in english if not your lang present",
            "line": " VISH.Editor.LRE.js:263"
        },
        {
            "message": "Missing item type\nParam style: optional param with the style, used in editing presentation",
            "line": " VISH.Editor.Object.Snapshot.js:76"
        },
        {
            "message": "Missing item type\nReturns a object prepared to draw.\nparam options.area: optional param indicating the area to add the object, used for editing presentations\nparam options.style: optional param with the style, used in editing presentation",
            "line": " VISH.Editor.Object.js:350"
        },
        {
            "message": "Missing item type\nparam style: optional param with the style, used in editing presentation",
            "line": " VISH.Editor.Object.js:431"
        },
        {
            "message": "Missing item type\nInsert the selected slides of a slide presentation in JSON",
            "line": " VISH.Editor.Presentation.js:31"
        },
        {
            "message": "Missing item type\nFunction to initialize the renderer",
            "line": " VISH.Editor.Renderer.js:5"
        },
        {
            "message": "Missing item type\nfunction to render one slide in editor",
            "line": " VISH.Editor.Renderer.js:40"
        },
        {
            "message": "Missing item type\nFunction to render slidesets",
            "line": " VISH.Editor.Renderer.js:110"
        },
        {
            "message": "Missing item type\nfunction called when the user clicks on the save button\nin the initial presentation details fancybox to save\nthe data in order to be stored at the end in the JSON file",
            "line": " VISH.Editor.Settings.js:367"
        },
        {
            "message": "Missing item type\nfunction called when the user clicks on the pedagogical options button",
            "line": " VISH.Editor.Settings.js:517"
        },
        {
            "message": "Missing item type\nfunction called when the user clicks on the done button in the pedagogical options panel",
            "line": " VISH.Editor.Settings.js:526"
        },
        {
            "message": "Missing item type\nfunction to know if the slides have the focus or not\nUse to disable actions (like keyboard shortcuts) when the slide is not focused",
            "line": " VISH.Editor.Slides.js:11"
        },
        {
            "message": "Missing item type\nFunction called when user clicks on the text thumb\nAllows users to include text content in the slide using a WYSIWYG editor\nparam area: optional param indicating the area to add the wysiwyg, used for editing presentations",
            "line": " VISH.Editor.Text.js:60"
        },
        {
            "message": "Missing item type\nFunction to select the thumbnail",
            "line": " VISH.Editor.Thumbnails.js:140"
        },
        {
            "message": "Missing item type\nfunction called when user clicks on save\nGenerates the json for the current slides\ncovers the section element and every article inside\nfinally calls V.Viewer with the generated json",
            "line": " VISH.Editor.Tools.Menu.js:72"
        },
        {
            "message": "Missing item type\nParses a ISO8601 period string.",
            "line": " VISH.Editor.Utils.iso8601Parser.js:50"
        },
        {
            "message": "Missing item type\nfunction to get the styles in percentages",
            "line": " VISH.Editor.Utils.js:82"
        },
        {
            "message": "Missing item type\nFunction to load a tab and its content in the fancybox\nalso changes the help button to show the correct help",
            "line": " VISH.Editor.Utils.js:432"
        },
        {
            "message": "Missing item type\nReturns a video object prepared to draw.\nSources: array of arrays [[source src, source type],...] .\nOptions: hash with additional data like poster url or autoplay\nparam area: optional param indicating the area to add the video, used for editing presentations\nparam style: optional param with the style, used in editing presentation",
            "line": " VISH.Editor.Video.HTML5.js:15"
        },
        {
            "message": "Missing item type\nfunction called when user clicks on template\nIncludes a new slide following the template selected",
            "line": " VISH.Editor.js:172"
        },
        {
            "message": "Missing item type\nFunction called when user clicks on an editable element\nEvent launched when an editable element belonging to the slide is clicked",
            "line": " VISH.Editor.js:216"
        },
        {
            "message": "Missing item type\nfunction called when user clicks on the delete icon of the zone",
            "line": " VISH.Editor.js:313"
        },
        {
            "message": "Missing item type\nFunction called when user delete a slide",
            "line": " VISH.Editor.js:344"
        },
        {
            "message": "Missing item type\nfunction called when user clicks on template zone with class selectable",
            "line": " VISH.Editor.js:375"
        },
        {
            "message": "Missing item type\nFunction called when user clicks on any element without class selectable",
            "line": " VISH.Editor.js:384"
        },
        {
            "message": "Missing item type\nFunction to add a delete button to the element",
            "line": " VISH.Editor.js:444"
        },
        {
            "message": "Missing item type\nFunction called when entering slide in editor, we have to show the objects",
            "line": " VISH.Editor.js:456"
        },
        {
            "message": "Missing item type\nFunction called when leaving slide in editor, we have to hide the objects",
            "line": " VISH.Editor.js:480"
        },
        {
            "message": "Missing item type\nFunction to save the presentation",
            "line": " VISH.Editor.js:505"
        },
        {
            "message": "Missing item type\nfunction to get the template of the slide of current_el\nparam area: optional param indicating the area to get the template, used for editing presentations",
            "line": " VISH.Editor.js:763"
        },
        {
            "message": "Missing item type\nfunction to add the events to the help buttons to launch joy ride bubbles",
            "line": " VISH.Events.js:104"
        },
        {
            "message": "Missing item type\nFunction called when a poi is clicked\n'event' can be a delegate click event or a number",
            "line": " VISH.Events.js:181"
        },
        {
            "message": "Missing item type\nFunction to reload a gifs in the slide for Mobile devices",
            "line": " VISH.ImagePlayer.js:3"
        },
        {
            "message": "Missing item type\nPatterns",
            "line": " VISH.Object.js:65"
        },
        {
            "message": "Missing item type\nFunction to add an object to the slide\nthe object is in the wrapper attribute of the div",
            "line": " VISH.ObjectPlayer.js:3"
        },
        {
            "message": "Missing item type\nFunction to remove the flash objects from the slides",
            "line": " VISH.ObjectPlayer.js:26"
        },
        {
            "message": "Missing item type\nFunction to initialize the presentation\nInitialize renderer and call it to render each slide",
            "line": " VISH.Presentation.js:4"
        },
        {
            "message": "Missing item type\nPrivate function called when we have finished rendering the slides",
            "line": " VISH.Presentation.js:19"
        },
        {
            "message": "Missing item type\nSend answers for real time quizzes\nPUT /quiz_sessions/X",
            "line": " VISH.Quiz.API.js:47"
        },
        {
            "message": "Missing item type\nGET /quiz_sessions/X/results.json.",
            "line": " VISH.Quiz.API.js:88"
        },
        {
            "message": "Missing item type\nFunction to render a quiz inside an article (a slide)",
            "line": " VISH.Quiz.js:241"
        },
        {
            "message": "Missing item type\nHelpers",
            "line": " VISH.QuizCharts.js:160"
        },
        {
            "message": "Missing item type\nFunction to initialize the Recommendations",
            "line": " VISH.Recommendations.js:9"
        },
        {
            "message": "Missing item type\nfunction to call ViSH via AJAX to get recommendation of excursions",
            "line": " VISH.Recommendations.js:47"
        },
        {
            "message": "Missing item type\nFunction to initialize the renderer\nOnly gets the section element from the html page",
            "line": " VISH.Renderer.js:6"
        },
        {
            "message": "Missing item type\nslides.html only have a section element and in this function we add an article element\nwith the proper content for the slide",
            "line": " VISH.Renderer.js:15"
        },
        {
            "message": "Missing item type\nFunction to render text inside an article (a slide)",
            "line": " VISH.Renderer.js:136"
        },
        {
            "message": "Missing item type\nFunction to render empty inside an article (a slide)",
            "line": " VISH.Renderer.js:143"
        },
        {
            "message": "Missing item type\nFunction to render an image inside an article (a slide)",
            "line": " VISH.Renderer.js:150"
        },
        {
            "message": "Missing item type\nFunction to render a video inside an article (a slide)",
            "line": " VISH.Renderer.js:174"
        },
        {
            "message": "Missing item type\nFunction to render an object inside an article (a slide)",
            "line": " VISH.Renderer.js:208"
        },
        {
            "message": "Missing item type\nFunction to render an snapshot inside an article (a slide)",
            "line": " VISH.Renderer.js:234"
        },
        {
            "message": "Missing item type\nFunction to render an applet inside an article (a slide)\nthe applet object and its params are not really inside the article but in the archive attribute, width, height and params of the div\nwhen entering a slide with an applet class we call V.AppletPlayer.loadSWF",
            "line": " VISH.Renderer.js:245"
        },
        {
            "message": "Missing item type\nFunction to render a flashcard inside an article (a slide)\nwe only add canvas inside the div element\nthe flashcard will be drawn inside the canvas element",
            "line": " VISH.Renderer.js:254"
        },
        {
            "message": "Missing item type\nFunction to go to next slide",
            "line": " VISH.Slides.js:225"
        },
        {
            "message": "Missing item type\nFunction to go to previous slide",
            "line": " VISH.Slides.js:232"
        },
        {
            "message": "Missing item type\nFunction to move n slides and change the thumbnails and focus\nn > 0 (advance slides)\nn < 0 (go back)",
            "line": " VISH.Slides.js:239"
        },
        {
            "message": "Missing item type\nGo to the slide no",
            "line": " VISH.Slides.js:256"
        },
        {
            "message": "Missing item type\nGo to the last slide",
            "line": " VISH.Slides.js:305"
        },
        {
            "message": "Missing item type\nFunction to open a subslide",
            "line": " VISH.Slides.js:313"
        },
        {
            "message": "Missing item type\nFunction to close a subslide",
            "line": " VISH.Slides.js:337"
        },
        {
            "message": "Missing item type\nLoad web snapshots",
            "line": " VISH.SnapshotPlayer.js:3"
        },
        {
            "message": "Missing item type\nUnload websnapshots",
            "line": " VISH.SnapshotPlayer.js:29"
        },
        {
            "message": "Missing item type\nfunction to start a walkme tour witht he help \"ol\" id given\ntipLocation can be 'top' or 'bottom' in relation to parent element",
            "line": " VISH.Tour.js:3"
        },
        {
            "message": "Missing item type\nFunction to dinamically add a css",
            "line": " VISH.Utils.Loader.js:147"
        },
        {
            "message": "Missing item type\nReturn a unic id.\nfull_id_prefix: Specify a prefix for the id, for example, article to get \"article_x\" ids.\nSpecify a separator for nested ids.\njustCheck: only check if the id is really unic, if not generate a new id.",
            "line": " VISH.Utils.js:34"
        },
        {
            "message": "Missing item type\nFix presentations with old JSON format\nTry to update them to current version\nReturn null if presentation is irretrievable",
            "line": " VISH.Utils.js:76"
        },
        {
            "message": "Missing item type\nCheck slide types and fix it",
            "line": " VISH.Utils.js:106"
        },
        {
            "message": "Missing item type\nFunction to get width in pixels from a style attribute.\nIf width attribute is given by percent, area (parent container) attribute is needed.",
            "line": " VISH.Utils.js:533"
        },
        {
            "message": "Missing item type\nFunction to get width in pixels from a style attribute.\nIf width attribute is given by percent, area (parent container) attribute is needed.",
            "line": " VISH.Utils.js:541"
        },
        {
            "message": "Missing item type\nFunction to get width and height in pixels from a style attribute.\nIf widht or height attribute is given by percent, area (parent container) attribute is needed to convert to pixels.",
            "line": " VISH.Utils.js:550"
        },
        {
            "message": "Missing item type\nFunction to start all videos of a slide",
            "line": " VISH.VideoPlayer.HTML5.js:69"
        },
        {
            "message": "Missing item type\nFunction to stop all videos of a slide",
            "line": " VISH.VideoPlayer.HTML5.js:92"
        },
        {
            "message": "Missing item type\nFunction to start a specific video",
            "line": " VISH.VideoPlayer.HTML5.js:106"
        },
        {
            "message": "Missing item type\nFunction to pause a specific video",
            "line": " VISH.VideoPlayer.HTML5.js:122"
        },
        {
            "message": "Missing item type\nFunction to seek a specific video",
            "line": " VISH.VideoPlayer.HTML5.js:138"
        },
        {
            "message": "Missing item type\nFunction to pause a specific video",
            "line": " VISH.VideoPlayer.Youtube.js:146"
        },
        {
            "message": "Missing item type\nFunction to pause a specific video",
            "line": " VISH.VideoPlayer.Youtube.js:173"
        },
        {
            "message": "Missing item type\nFunction to initialize the Viewer, saves the slides object and init the presentation with it\noptions is a hash with params and options from the server.",
            "line": " VISH.Viewer.js:9"
        },
        {
            "message": "Missing item type\nFunction to enter and exit fullscreen",
            "line": " VISH.Viewer.js:86"
        },
        {
            "message": "Missing item type\nFunction called when entering slide in viewer, we have to show the objects",
            "line": " VISH.Viewer.js:126"
        },
        {
            "message": "Missing item type\nFunction called when leaving a slide in viewer",
            "line": " VISH.Viewer.js:171"
        },
        {
            "message": "Missing item type\nfunction to check if this is the penultimate Slide (or the only one) and call to get the recommendations",
            "line": " VISH.Viewer.js:196"
        },
        {
            "message": "Missing item type\nfunction to update the number that indicates what slide is diplayed\nwith this format: 1/12 2/12",
            "line": " VISH.Viewer.js:211"
        },
        {
            "message": "Missing item type\nFunction to hide/show the page-switchers buttons\nhide the left one if on first slide\nhide the right one if on last slide -> always show it, it will show the recommendations if on last slide\nshow both otherwise",
            "line": " VISH.ViewerAdapter.js:195"
        },
        {
            "message": "Missing item type\nFunction to adapt the slides to the screen size, in case the editor is shown in another iframe\nparam \"fullscreen\" indicates that the call comes from a fullscreen button",
            "line": " VISH.ViewerAdapter.js:268"
        },
        {
            "message": "Missing item type\nFancybox resizing",
            "line": " VISH.ViewerAdapter.js:352"
        }
    ]
}